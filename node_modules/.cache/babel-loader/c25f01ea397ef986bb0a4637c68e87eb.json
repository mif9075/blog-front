{"ast":null,"code":"var _jsxFileName = \"/Users/pakchu/Desktop/CIM-All-Code/advanced-form/src/Input/Input.js\";\n\n/* eslint-disable no-unused-expressions */\n\n/* eslint-disable no-duplicate-case */\n\n/* eslint-disable no-fallthrough */\nimport React from 'react';\nimport { TextField, MenuItem } from '@material-ui/core';\n\nconst Input = props => {\n  const input = props.input;\n  let dynamicInputField = null;\n\n  switch (input.type) {\n    case 'text':\n      dynamicInputField = React.createElement(TextField, {\n        id: input.id,\n        label: input.label,\n        required: input.required,\n        style: input.style,\n        name: input.name,\n        type: input.name,\n        onChange: input.handleInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        },\n        __self: this\n      });\n      break;\n\n    case 'email':\n      dynamicInputField = React.createElement(TextField, {\n        id: input.id,\n        label: input.label,\n        required: input.required,\n        style: input.style,\n        name: input.name,\n        type: input.name,\n        onChange: input.handleInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      });\n      break;\n\n    case 'password':\n      dynamicInputField = React.createElement(TextField, {\n        id: input.id,\n        label: input.label,\n        required: input.required,\n        style: input.style,\n        name: input.name,\n        type: input.name,\n        onChange: input.handleInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      });\n      break;\n\n    case 'select':\n      dynamicInputField = React.createElement(TextField, {\n        id: input.id,\n        select: input.select,\n        label: input.label,\n        style: input.style,\n        name: input.name,\n        onChange: input.handleInputChange,\n        helperText: input.helperText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, input.gender.map(option => {\n        console.log(option);\n        return React.createElement(MenuItem, {\n          key: option,\n          value: option,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67\n          },\n          __self: this\n        }, option.label);\n      }));\n\n    case 'multiline':\n      dynamicInputField = React.createElement(TextField, {\n        id: input.id,\n        label: input.label,\n        required: input.required,\n        style: input.style,\n        name: input.name,\n        type: input.name,\n        onChange: input.handleInputChange,\n        multiline: input.multiline,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      });\n      break;\n\n    default:\n      return null;\n  }\n\n  return React.createElement(React.Fragment, null, dynamicInputField);\n};\n\nexport default Input;","map":{"version":3,"sources":["/Users/pakchu/Desktop/CIM-All-Code/advanced-form/src/Input/Input.js"],"names":["React","TextField","MenuItem","Input","props","input","dynamicInputField","type","id","label","required","style","name","handleInputChange","select","helperText","gender","map","option","console","log","multiline"],"mappings":"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","sourcesContent":["/* eslint-disable no-unused-expressions */\n/* eslint-disable no-duplicate-case */\n/* eslint-disable no-fallthrough */\nimport React from 'react';\nimport {TextField, MenuItem} from '@material-ui/core';\n\n\n\n\nconst Input = (props) => {\n  const { input } = props;\n\n  let dynamicInputField = null \n\n  switch (input.type) {\n\n    case('text'):\n      dynamicInputField = <TextField \n                                id={input.id}\n                                label={input.label}\n                                required={input.required}\n                                style={input.style}\n                                name={input.name}\n                                type={input.name}\n                                onChange={input.handleInputChange}\n                          />\n      break;\n\n    case('email'):\n        dynamicInputField = <TextField \n                              id={input.id}\n                              label={input.label}\n                              required={input.required}\n                              style={input.style}\n                              name={input.name}\n                              type={input.name}\n                              onChange={input.handleInputChange}\n                            />\n        break;                   \n      \n    case('password'):\n        dynamicInputField = <TextField \n                              id={input.id}\n                              label={input.label}\n                              required={input.required}\n                              style={input.style}\n                              name={input.name}\n                              type={input.name}\n                              onChange={input.handleInputChange}\n                            />\n        break; \n    case('select'):\n    \n    \n        dynamicInputField = <TextField\n                      id={input.id}\n                      select={input.select}\n                      label={input.label}\n                      style={input.style}\n                      name={input.name}\n                      onChange={input.handleInputChange}\n                      helperText={input.helperText}\n                    >\n                      {input.gender.map(option => {\n                        console.log(option)\n                        return (\n                          <MenuItem key={option} value={option}>\n                          {option.label}\n                        </MenuItem>\n                        )\n                      })}\n                    </TextField>\n    case('multiline'):\n      dynamicInputField = <TextField \n                            id={input.id}\n                            label={input.label}\n                            required={input.required}\n                            style={input.style}\n                            name={input.name}\n                            type={input.name}\n                            onChange={input.handleInputChange}\n                            multiline={input.multiline}\n                          />\n\n      break;\n\n    default: \n      return null;\n  }\n\n\n\n  return (\n    <>\n      {dynamicInputField}\n    </>\n  )\n}\n\nexport default Input"]},"metadata":{},"sourceType":"module"}