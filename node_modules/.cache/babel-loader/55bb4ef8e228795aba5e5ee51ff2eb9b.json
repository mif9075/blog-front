{"ast":null,"code":"import _defineProperty from \"/Users/pakchu/Desktop/CIM-All-Code/blog-auth-redux/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { AUTH_USER_SUCCESSFUL, AUTH_USER_LOGOUT } from '../actionTypes/actionTypes';\nimport jwtDecode from 'jwt-decode';\nconst initialState = {\n  isAuthenticated: false,\n  user: {}\n};\n\nconst stateHelperFunc = (oldState, newState) => {\n  console.log(oldState, newState);\n  return _objectSpread({}, oldState, {}, newState);\n};\n\nconst jwtDecodeTokenAndSetUser = (oldState, token) => {\n  let decodedToken = jwtDecode(token);\n  return stateHelperFunc(oldState, {\n    isAuthenticated: true,\n    user: {\n      email: decodedToken.email,\n      username: decodedToken.username,\n      id: decodedToken.id\n    }\n  });\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case AUTH_USER_SUCCESSFUL:\n      return jwtDecodeTokenAndSetUser(...state, action.payload);\n\n    case AUTH_USER_LOGOUT:\n      return {\n        isAuthenticated: false,\n        user: {}\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/pakchu/Desktop/CIM-All-Code/blog-auth-redux/src/redux/reducer/authReducer.js"],"names":["AUTH_USER_SUCCESSFUL","AUTH_USER_LOGOUT","jwtDecode","initialState","isAuthenticated","user","stateHelperFunc","oldState","newState","console","log","jwtDecodeTokenAndSetUser","token","decodedToken","email","username","id","state","action","type","payload"],"mappings":";;;;;;AAAA,SAASA,oBAAT,EAA+BC,gBAA/B,QAAuD,4BAAvD;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,eAAe,EAAE,KADE;AAEnBC,EAAAA,IAAI,EAAE;AAFa,CAArB;;AAKA,MAAMC,eAAe,GAAG,CAACC,QAAD,EAAWC,QAAX,KAAwB;AAC9CC,EAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ,EAAsBC,QAAtB;AACA,2BACKD,QADL,MAEKC,QAFL;AAID,CAND;;AAQA,MAAMG,wBAAwB,GAAG,CAACJ,QAAD,EAAWK,KAAX,KAAsB;AAErD,MAAIC,YAAY,GAAGX,SAAS,CAACU,KAAD,CAA5B;AAEA,SAAON,eAAe,CAACC,QAAD,EAAW;AAC/BH,IAAAA,eAAe,EAAE,IADc;AAE/BC,IAAAA,IAAI,EAAE;AACJS,MAAAA,KAAK,EAAED,YAAY,CAACC,KADhB;AAEJC,MAAAA,QAAQ,EAAEF,YAAY,CAACE,QAFnB;AAGJC,MAAAA,EAAE,EAAEH,YAAY,CAACG;AAHb;AAFyB,GAAX,CAAtB;AASD,CAbD;;AAeA,eAAe,UAASC,KAAK,GAAGd,YAAjB,EAA+Be,MAA/B,EAAuC;AACpD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKnB,oBAAL;AACE,aAAOW,wBAAwB,CAAC,GAAGM,KAAJ,EAAWC,MAAM,CAACE,OAAlB,CAA/B;;AACF,SAAKnB,gBAAL;AACE,aAAO;AACLG,QAAAA,eAAe,EAAE,KADZ;AAELC,QAAAA,IAAI,EAAE;AAFD,OAAP;;AAIF;AACE,aAAOY,KAAP;AATJ;AAWD","sourcesContent":["import { AUTH_USER_SUCCESSFUL, AUTH_USER_LOGOUT } from '../actionTypes/actionTypes';\nimport jwtDecode from 'jwt-decode';\n\nconst initialState = {\n  isAuthenticated: false,\n  user: {}\n};\n\nconst stateHelperFunc = (oldState, newState) => {\n  console.log(oldState, newState)\n  return {\n    ...oldState, \n    ...newState\n  }\n}\n\nconst jwtDecodeTokenAndSetUser = (oldState, token)  => {\n\n  let decodedToken = jwtDecode(token);\n\n  return stateHelperFunc(oldState, {\n    isAuthenticated: true, \n    user: {\n      email: decodedToken.email,\n      username: decodedToken.username,\n      id: decodedToken.id\n    }\n  })\n\n}\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case AUTH_USER_SUCCESSFUL:\n      return jwtDecodeTokenAndSetUser(...state, action.payload)\n    case AUTH_USER_LOGOUT:\n      return {\n        isAuthenticated: false,\n        user: {}\n      }\n    default:\n      return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}