{"ast":null,"code":"var _jsxFileName = \"/Users/codeimmersives/Desktop/Archive 5/blog-auth-redux 7/src/Components/SeeTalk/SeeTalk.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { getTalkByID } from '../../redux/action/talkAction';\nimport Spinner from '../../Factory/Spinner/Spinner';\n\nclass SeeTalk extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      title: '',\n      image: '',\n      talk: '',\n      isFetching: null\n    };\n  }\n\n  componentDidMount() {\n    if (this.props.location.state !== undefined) {\n      this.setState({\n        title: this.props.location.state.title,\n        image: this.props.location.state.image,\n        talk: this.props.location.state.talk\n      });\n    } else {\n      this.setState({\n        isFetching: true\n      });\n      this.props.getTalkByID(this.props.match.params.id).then(talk => {\n        this.setState({\n          title: talk.title,\n          image: talk.image,\n          talk: talk.talk,\n          isFetching: false\n        });\n      }).catch(error => {\n        console.log(error);\n      });\n    }\n  }\n\n  render() {\n    const _this$state = this.state,\n          title = _this$state.title,\n          talk = _this$state.talk,\n          image = _this$state.image,\n          isFetching = _this$state.isFetching;\n    let talkInfo = React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, \"title \", title), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: image,\n      alt: \"hamster\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    })), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, talk));\n    return isFetching ? React.createElement(Spinner, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }) : talkInfo;\n  }\n\n}\n\nexport default connect(null, {\n  getTalkByID\n})(SeeTalk);","map":{"version":3,"sources":["/Users/codeimmersives/Desktop/Archive 5/blog-auth-redux 7/src/Components/SeeTalk/SeeTalk.js"],"names":["React","Component","connect","getTalkByID","Spinner","SeeTalk","state","title","image","talk","isFetching","componentDidMount","props","location","undefined","setState","match","params","id","then","catch","error","console","log","render","talkInfo"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,WAAT,QAA4B,+BAA5B;AACA,OAAOC,OAAP,MAAoB,+BAApB;;AAEA,MAAMC,OAAN,SAAsBJ,SAAtB,CAAgC;AAAA;AAAA;AAAA,SAE9BK,KAF8B,GAEtB;AACNC,MAAAA,KAAK,EAAE,EADD;AAENC,MAAAA,KAAK,EAAE,EAFD;AAGNC,MAAAA,IAAI,EAAE,EAHA;AAINC,MAAAA,UAAU,EAAE;AAJN,KAFsB;AAAA;;AAS9BC,EAAAA,iBAAiB,GAAG;AAElB,QAAI,KAAKC,KAAL,CAAWC,QAAX,CAAoBP,KAApB,KAA8BQ,SAAlC,EAA6C;AAC3C,WAAKC,QAAL,CAAc;AACZR,QAAAA,KAAK,EAAE,KAAKK,KAAL,CAAWC,QAAX,CAAoBP,KAApB,CAA0BC,KADrB;AAEZC,QAAAA,KAAK,EAAE,KAAKI,KAAL,CAAWC,QAAX,CAAoBP,KAApB,CAA0BE,KAFrB;AAGZC,QAAAA,IAAI,EAAE,KAAKG,KAAL,CAAWC,QAAX,CAAoBP,KAApB,CAA0BG;AAHpB,OAAd;AAKD,KAND,MAMO;AAEL,WAAKM,QAAL,CAAc;AACZL,QAAAA,UAAU,EAAE;AADA,OAAd;AAGA,WAAKE,KAAL,CAAWT,WAAX,CAAuB,KAAKS,KAAL,CAAWI,KAAX,CAAiBC,MAAjB,CAAwBC,EAA/C,EACWC,IADX,CACiBV,IAAI,IAAI;AAEb,aAAKM,QAAL,CAAc;AACZR,UAAAA,KAAK,EAAEE,IAAI,CAACF,KADA;AAEZC,UAAAA,KAAK,EAAEC,IAAI,CAACD,KAFA;AAGZC,UAAAA,IAAI,EAAEA,IAAI,CAACA,IAHC;AAIZC,UAAAA,UAAU,EAAE;AAJA,SAAd;AAMD,OATX,EAUWU,KAVX,CAUiBC,KAAK,IAAI;AACdC,QAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD,OAZX;AAaD;AAEF;;AAEDG,EAAAA,MAAM,GAAG;AAAA,wBAEoC,KAAKlB,KAFzC;AAAA,UAECC,KAFD,eAECA,KAFD;AAAA,UAEQE,IAFR,eAEQA,IAFR;AAAA,UAEcD,KAFd,eAEcA,KAFd;AAAA,UAEqBE,UAFrB,eAEqBA,UAFrB;AAIP,QAAIe,QAAQ,GACR;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAWlB,KAAX,CADA,EAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK;AAAK,MAAA,GAAG,EAAEC,KAAV;AAAiB,MAAA,GAAG,EAAC,SAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAL,CAFA,EAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIC,IAAJ,CAHA,CADJ;AAQA,WACCC,UAAU,GAAG,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAH,GAAiBe,QAD5B;AAGD;;AAtD6B;;AAyDhC,eAAevB,OAAO,CAAC,IAAD,EAAO;AAAEC,EAAAA;AAAF,CAAP,CAAP,CAA+BE,OAA/B,CAAf","sourcesContent":["import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { getTalkByID } from '../../redux/action/talkAction';\nimport Spinner from '../../Factory/Spinner/Spinner';\n\nclass SeeTalk extends Component {\n\n  state = {\n    title: '',\n    image: '',\n    talk: '',\n    isFetching: null\n  }\n\n  componentDidMount() {\n\n    if (this.props.location.state !== undefined) {\n      this.setState({\n        title: this.props.location.state.title,\n        image: this.props.location.state.image,\n        talk: this.props.location.state.talk\n      })\n    } else {\n\n      this.setState({\n        isFetching: true\n      })\n      this.props.getTalkByID(this.props.match.params.id)\n                .then( talk => {\n             \n                  this.setState({\n                    title: talk.title,\n                    image: talk.image,\n                    talk: talk.talk,\n                    isFetching: false\n                  })\n                })\n                .catch(error => {\n                  console.log(error)\n                })\n    }\n\n  }\n\n  render() {\n   \n    const { title, talk, image, isFetching } = this.state\n\n    let talkInfo = (\n        <div className='App'>\n        <h1>title {title}</h1>\n        <div><img src={image} alt=\"hamster\"/></div>\n        <p>{talk}</p>\n      </div>\n    )\n\n    return (\n     isFetching ? <Spinner /> : talkInfo\n    )\n  }\n}\n\nexport default connect(null, { getTalkByID })(SeeTalk);"]},"metadata":{},"sourceType":"module"}