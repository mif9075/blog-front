{"ast":null,"code":"import _defineProperty from \"/Users/pakchu/Desktop/CIM-All-Code/blog-auth-redux/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { AUTH_USER_SUCCESSFUL, AUTH_USER_LOGOUT } from '../actionTypes/actionTypes';\nimport jwtDecode from 'jwt-decode';\nconst initialState = {\n  isAuthenticated: false,\n  user: {}\n};\n\nconst jwtDecodeToken = async (state, token) => {\n  let decodedToken = jwtDecode(token);\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case AUTH_USER_SUCCESSFUL:\n      let decodedToken = jwtDecode(action.payload);\n      console.log(decodedToken);\n      return _objectSpread({}, state, {\n        isAuthenticated: true,\n        user: action.payload\n      });\n\n    case AUTH_USER_LOGOUT:\n      return {\n        isAuthenticated: false,\n        user: {}\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/pakchu/Desktop/CIM-All-Code/blog-auth-redux/src/redux/reducer/authReducer.js"],"names":["AUTH_USER_SUCCESSFUL","AUTH_USER_LOGOUT","jwtDecode","initialState","isAuthenticated","user","jwtDecodeToken","state","token","decodedToken","action","type","payload","console","log"],"mappings":";;;;;;AAAA,SAASA,oBAAT,EAA+BC,gBAA/B,QAAuD,4BAAvD;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,eAAe,EAAE,KADE;AAEnBC,EAAAA,IAAI,EAAE;AAFa,CAArB;;AAKA,MAAMC,cAAc,GAAG,OAAOC,KAAP,EAAcC,KAAd,KAAyB;AAE9C,MAAIC,YAAY,GAAGP,SAAS,CAACM,KAAD,CAA5B;AAED,CAJD;;AAMA,eAAe,UAASD,KAAK,GAAGJ,YAAjB,EAA+BO,MAA/B,EAAuC;AACpD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKX,oBAAL;AACI,UAAIS,YAAY,GAAGP,SAAS,CAACQ,MAAM,CAACE,OAAR,CAA5B;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYL,YAAZ;AACF,+BACKF,KADL;AAEEH,QAAAA,eAAe,EAAE,IAFnB;AAGEC,QAAAA,IAAI,EAAEK,MAAM,CAACE;AAHf;;AAKF,SAAKX,gBAAL;AACE,aAAO;AACLG,QAAAA,eAAe,EAAE,KADZ;AAELC,QAAAA,IAAI,EAAE;AAFD,OAAP;;AAIF;AACE,aAAOE,KAAP;AAfJ;AAiBD","sourcesContent":["import { AUTH_USER_SUCCESSFUL, AUTH_USER_LOGOUT } from '../actionTypes/actionTypes';\nimport jwtDecode from 'jwt-decode';\n\nconst initialState = {\n  isAuthenticated: false,\n  user: {}\n};\n\nconst jwtDecodeToken = async (state, token)  => {\n\n  let decodedToken = jwtDecode(token);\n\n}\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case AUTH_USER_SUCCESSFUL:\n        let decodedToken = jwtDecode(action.payload);\n        console.log(decodedToken)\n      return {\n        ...state,\n        isAuthenticated: true,\n        user: action.payload\n      };\n    case AUTH_USER_LOGOUT:\n      return {\n        isAuthenticated: false,\n        user: {}\n      }\n    default:\n      return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}