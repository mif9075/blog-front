{"ast":null,"code":"var _jsxFileName = \"/Users/pakchu/Desktop/CIM-All-Code/blog-auth-redux/src/Components/Signin/Signin.js\";\nimport React, { Component } from 'react';\nimport './Signin.css';\nimport Spinner from '../../Factory/Spinner/Spinner';\nimport formArray from './SigninConfig';\nimport { ValidatorForm } from 'react-material-ui-form-validator';\nimport ButtonClass from '../../Factory/Button/ButtonClass';\nimport Input from '../../Factory/Input/InputClass';\nimport { connect } from 'react-redux';\nimport { signin, handleErrorSignup } from '../../redux/action/authUserAction';\nimport MessageBar from '../../Factory/MessageBar/MessageBar';\n\nclass Signin extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      formData: {\n        email: '',\n        password: ''\n      },\n      submitted: false\n    };\n\n    this.successfullySignedUp = () => {\n      this.setState({\n        submitted: false,\n        formData: {\n          email: '',\n          password: ''\n        }\n      });\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      this.setState({\n        submitted: true\n      }, () => {\n        this.props.signin(this.state.formData).then(() => {\n          this.successfullySignedUp();\n          this.props.history.push('/');\n        }).catch(error => {\n          console.log(error);\n          this.props.handleErrorSignup(error.response.data.message);\n          this.setState({\n            submitted: false\n          });\n        });\n      });\n    };\n\n    this.handleChange = event => {\n      const formData = this.state.formData;\n      formData[event.target.name] = event.target.value;\n      this.setState({\n        formData\n      });\n    };\n  }\n\n  render() {\n    const submitted = this.state.submitted;\n    let form = formArray.map((field, index) => {\n      return React.createElement(\"div\", {\n        key: field.input.label,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(Input, Object.assign({}, field, this.state.formData, {\n        handleInputChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      })), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }));\n    });\n    return React.createElement(React.Fragment, null, this.props.message.serverMessage !== null ? React.createElement(MessageBar, {\n      fontColorStyle: this.props.message.messageStyle.fontColorStyle,\n      dynamicClassName: this.props.message.messageStyle.dynamicClassName,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, this.props.message.serverMessage, \" Redirecting to sign in page\") : '', React.createElement(ValidatorForm, {\n      className: \"Form\",\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, submitted ? React.createElement(Spinner, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }) : form, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }), React.createElement(ButtonClass, {\n      color: \"primary\",\n      variant: \"contained\",\n      type: \"submit\",\n      disabled: submitted,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, submitted && 'Your form is submitted!' || !submitted && 'Submit')));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    message: state.message\n  };\n};\n\nexport default connect(mapStateToProps, {\n  signin,\n  handleErrorSignup\n})(Signin);","map":{"version":3,"sources":["/Users/pakchu/Desktop/CIM-All-Code/blog-auth-redux/src/Components/Signin/Signin.js"],"names":["React","Component","Spinner","formArray","ValidatorForm","ButtonClass","Input","connect","signin","handleErrorSignup","MessageBar","Signin","state","formData","email","password","submitted","successfullySignedUp","setState","handleSubmit","event","preventDefault","props","then","history","push","catch","error","console","log","response","data","message","handleChange","target","name","value","render","form","map","field","index","input","label","serverMessage","messageStyle","fontColorStyle","dynamicClassName","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport './Signin.css'\nimport Spinner from '../../Factory/Spinner/Spinner';\nimport formArray from './SigninConfig';\nimport { ValidatorForm } from 'react-material-ui-form-validator';\nimport ButtonClass from '../../Factory/Button/ButtonClass';\nimport Input from '../../Factory/Input/InputClass';\nimport { connect } from 'react-redux';\nimport { signin, handleErrorSignup } from '../../redux/action/authUserAction';\nimport MessageBar from '../../Factory/MessageBar/MessageBar';\n\nclass Signin extends Component {\n\n  state = {\n    formData: {\n      email: '',\n      password: '',\n    },\n    submitted: false,\n  }\n\n  successfullySignedUp = () => {\n    this.setState({\n      submitted: false,\n      formData: {\n        email: '',\n        password: ''\n      }\n    })\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    this.setState({\n      submitted: true\n    }, () => {\n\n        this.props.signin(this.state.formData)\n            .then(() => {\n              this.successfullySignedUp();\n              this.props.history.push('/') \n            })\n            .catch(error => {\n              console.log(error)\n              this.props.handleErrorSignup(error.response.data.message)\n              this.setState({\n                submitted: false\n              })\n            })\n\n    });\n\n  }\n\n  handleChange = (event) => {\n    const { formData } = this.state;\n    formData[event.target.name] = event.target.value;\n    this.setState({ formData });\n  }\n\n  render() {\n\n    const {submitted} = this.state;\n\n    let form = (\n      formArray.map((field, index) => {\n          \n        return (\n          <div key={field.input.label}>\n              <Input \n                {...field}\n                {...this.state.formData}\n                handleInputChange={this.handleChange}\n              />\n              <br />\n          </div>\n        )\n      })\n    ) \n\n    return (\n      <>\n        {this.props.message.serverMessage !== null ? <MessageBar \n                                        fontColorStyle={this.props.message.messageStyle.fontColorStyle}\n                                        dynamicClassName={this.props.message.messageStyle.dynamicClassName}\n                                        >{this.props.message.serverMessage} Redirecting to sign in page</MessageBar> : '' }\n\n\n        <ValidatorForm className='Form' onSubmit={this.handleSubmit}>\n            {\n                submitted ? <Spinner /> : form\n            }\n            <br />\n            \n            <ButtonClass \n              color=\"primary\"\n              variant=\"contained\"\n              type=\"submit\"\n              disabled={submitted}\n              > \n              {\n                  (submitted && 'Your form is submitted!')\n                  || (!submitted && 'Submit')\n              }\n            </ButtonClass>\n            \n          </ValidatorForm>\n      </>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    message: state.message\n  }\n}\n\nexport default connect(mapStateToProps, { signin, handleErrorSignup })(Signin);"]},"metadata":{},"sourceType":"module"}