{"ast":null,"code":"var _jsxFileName = \"/Users/pakchu/Desktop/CIM-All-Code/advanced-form/src/Input/InputClass.js\";\n\n/* eslint-disable no-unused-expressions */\n\n/* eslint-disable no-duplicate-case */\n\n/* eslint-disable no-fallthrough */\nimport React from 'react';\nimport { TextField, MenuItem, FormControl, InputLabel, Select, Input } from '@material-ui/core';\n\nconst InputClass = props => {\n  const input = props.input;\n  let dynamicInputField = null;\n\n  switch (input.type) {\n    case 'text':\n      dynamicInputField = React.createElement(TextField, {\n        id: input.id,\n        label: input.label,\n        required: input.required,\n        style: input.style,\n        name: input.name,\n        type: input.type,\n        onChange: props.handleInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      });\n      break;\n\n    case 'email':\n      dynamicInputField = React.createElement(TextField, {\n        id: input.id,\n        label: input.label,\n        required: input.required,\n        style: input.style,\n        name: input.name,\n        type: input.type,\n        onChange: props.handleInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      });\n      break;\n\n    case 'password':\n      dynamicInputField = React.createElement(TextField, {\n        id: input.id,\n        label: input.label,\n        required: input.required,\n        style: input.style,\n        name: input.name,\n        type: input.type,\n        onChange: props.handleInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      });\n      break;\n\n    case 'select':\n      dynamicInputField = React.createElement(FormControl, {\n        style: input.style,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(InputLabel, {\n        htmlFor: \"select-multiple\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, \"Choose You Gender\"), React.createElement(Select, {\n        multiple: true,\n        value: ['male'],\n        onChange: props.handleInputChange,\n        input: React.createElement(Input, {\n          id: \"select-multiple\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61\n          },\n          __self: this\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, input.gender.map(option => {\n        return React.createElement(MenuItem, {\n          key: option,\n          value: option,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66\n          },\n          __self: this\n        }, option);\n      })));\n      break;\n\n    case 'multiline':\n      dynamicInputField = React.createElement(TextField, {\n        id: input.id,\n        label: input.label,\n        required: input.required,\n        style: input.style,\n        name: input.name,\n        type: input.name,\n        onChange: props.handleInputChange,\n        rows: input.rows,\n        multiline: input.multiline,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      });\n      break;\n\n    default:\n      return null;\n  }\n\n  return React.createElement(React.Fragment, null, dynamicInputField);\n};\n\nexport default InputClass;","map":{"version":3,"sources":["/Users/pakchu/Desktop/CIM-All-Code/advanced-form/src/Input/InputClass.js"],"names":["React","TextField","MenuItem","FormControl","InputLabel","Select","Input","InputClass","props","input","dynamicInputField","type","id","label","required","style","name","handleInputChange","gender","map","option","rows","multiline"],"mappings":"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","sourcesContent":["/* eslint-disable no-unused-expressions */\n/* eslint-disable no-duplicate-case */\n/* eslint-disable no-fallthrough */\nimport React from 'react';\nimport {TextField, MenuItem, FormControl, InputLabel, Select, Input} from '@material-ui/core';\n\n\n\n\nconst InputClass = (props) => {\n  const { input } = props;\n\n  let dynamicInputField = null \n\n  switch (input.type) {\n\n    case('text'):\n\n      dynamicInputField = <TextField \n                                id={input.id}\n                                label={input.label}\n                                required={input.required}\n                                style={input.style}\n                                name={input.name}\n                                type={input.type}\n                                onChange={props.handleInputChange}\n                          />\n      break;\n\n    case('email'):\n        dynamicInputField = <TextField \n                              id={input.id}\n                              label={input.label}\n                              required={input.required}\n                              style={input.style}\n                              name={input.name}\n                              type={input.type}\n                              onChange={props.handleInputChange}\n                            />\n        break;                   \n      \n    case('password'):\n        dynamicInputField = <TextField \n                              id={input.id}\n                              label={input.label}\n                              required={input.required}\n                              style={input.style}\n                              name={input.name}\n                              type={input.type}\n                              onChange={props.handleInputChange}\n                            />\n        break; \n    case('select'):\n    \n        dynamicInputField = <FormControl style={input.style}>\n                              <InputLabel htmlFor=\"select-multiple\">Choose You Gender</InputLabel>\n                              <Select\n                                multiple\n                                value={['male']}\n                                onChange={props.handleInputChange}\n                                input={<Input id=\"select-multiple\" />}\n                              >\n                              {\n                                input.gender.map(option => {\n                                  return (\n                                    <MenuItem key={option} value={option}>\n                                      {option}\n                                    </MenuItem>\n                                  )\n                              })}\n                              </Select>\n                              </FormControl>\n\n\n      break;\n    case('multiline'):\n                 \n      dynamicInputField = <TextField \n                            id={input.id}\n                            label={input.label}\n                            required={input.required}\n                            style={input.style}\n                            name={input.name}\n                            type={input.name}\n                            onChange={props.handleInputChange}\n                            rows={input.rows}\n                            multiline={input.multiline}\n                          />\n\n      break;\n\n    default: \n      return null;\n  }\n\n\n\n  return (\n    <>\n      {dynamicInputField}\n    </>\n  )\n}\n\nexport default InputClass"]},"metadata":{},"sourceType":"module"}