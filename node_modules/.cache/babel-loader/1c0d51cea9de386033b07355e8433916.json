{"ast":null,"code":"import _defineProperty from \"/Users/codeimmersives/Desktop/Archive 5/blog-auth-redux 7/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport jwtDecode from 'jwt-decode';\n\nconst stateHelperFunc = (oldState, newState) => {\n  return _objectSpread({}, oldState, {}, newState);\n};\n\nexport const jwtDecodeTokenAndSetUser = (oldState, token) => {\n  let decodedToken = jwtDecode(token);\n  return stateHelperFunc(oldState, {\n    isAuthenticated: true,\n    user: {\n      email: decodedToken.email,\n      username: decodedToken.username,\n      id: decodedToken.id\n    }\n  });\n};","map":{"version":3,"sources":["/Users/codeimmersives/Desktop/Archive 5/blog-auth-redux 7/src/redux/reducer/authReducerHelpers.js"],"names":["jwtDecode","stateHelperFunc","oldState","newState","jwtDecodeTokenAndSetUser","token","decodedToken","isAuthenticated","user","email","username","id"],"mappings":";;;;;;AAAA,OAAOA,SAAP,MAAsB,YAAtB;;AAEA,MAAMC,eAAe,GAAG,CAACC,QAAD,EAAWC,QAAX,KAAwB;AAC9C,2BACKD,QADL,MAEKC,QAFL;AAID,CALD;;AAOA,OAAO,MAAMC,wBAAwB,GAAG,CAACF,QAAD,EAAWG,KAAX,KAAsB;AAC5D,MAAIC,YAAY,GAAGN,SAAS,CAACK,KAAD,CAA5B;AACA,SAAOJ,eAAe,CAACC,QAAD,EAAW;AAC/BK,IAAAA,eAAe,EAAE,IADc;AAE/BC,IAAAA,IAAI,EAAE;AACJC,MAAAA,KAAK,EAAEH,YAAY,CAACG,KADhB;AAEJC,MAAAA,QAAQ,EAAEJ,YAAY,CAACI,QAFnB;AAGJC,MAAAA,EAAE,EAAEL,YAAY,CAACK;AAHb;AAFyB,GAAX,CAAtB;AAQD,CAVM","sourcesContent":["import jwtDecode from 'jwt-decode';\n\nconst stateHelperFunc = (oldState, newState) => {\n  return {\n    ...oldState, \n    ...newState\n  }\n}\n\nexport const jwtDecodeTokenAndSetUser = (oldState, token)  => {\n  let decodedToken = jwtDecode(token);\n  return stateHelperFunc(oldState, {\n    isAuthenticated: true, \n    user: {\n      email: decodedToken.email,\n      username: decodedToken.username,\n      id: decodedToken.id\n    }\n  })\n}\n\n"]},"metadata":{},"sourceType":"module"}