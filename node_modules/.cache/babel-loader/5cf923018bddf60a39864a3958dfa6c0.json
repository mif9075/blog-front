{"ast":null,"code":"import _defineProperty from \"/Users/pakchu/Desktop/CIM-All-Code/blog-auth-redux/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/pakchu/Desktop/CIM-All-Code/blog-auth-redux/src/Components/CreateTalk/CreateTalk.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from 'react';\nimport ButtonClass from '../../Factory/Button/ButtonClass';\nimport formArray from './CreateTalkConfig';\nimport { ValidatorForm } from 'react-material-ui-form-validator';\nimport Input from '../../Factory/Input/InputClass';\nimport Spinner from '../../Factory/Spinner/Spinner';\nimport { connect } from 'react-redux';\nimport { createTalk } from '../../redux/action/talkAction';\n\nclass CreateTalk extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      formData: {\n        title: '',\n        talk: '',\n        picture: ''\n      },\n      submitted: false,\n      uploadPictureToggle: false\n    };\n\n    this.uploadWidget = () => {\n      window.cloudinary.openUploadWidget({\n        cloud_name: 'dy6xduf53',\n        upload_preset: 'gxaofwpa',\n        tags: ['hamster']\n      }, (error, result) => {\n        if (error) {\n          console.log(error);\n        } else {\n          if (result.event === 'success') {\n            console.log(result.info.secure_url);\n            const formData = this.state.formData;\n            formData['picture'] = result.info.secure_url;\n            this.setState(_objectSpread({}, this.state, {\n              formData\n            }));\n          }\n        }\n      });\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      this.props.CreateTalk(this.state.formData);\n    };\n\n    this.handleChange = event => {\n      const formData = this.state.formData;\n      formData[event.target.name] = event.target.value;\n      this.setState({\n        formData\n      });\n    };\n  }\n\n  render() {\n    const submitted = this.state.submitted;\n    let form = formArray.map((field, index) => {\n      return React.createElement(\"div\", {\n        key: field.input.label,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(Input, Object.assign({}, field, this.state.formData, {\n        handleInputChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      })), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }));\n    });\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(ValidatorForm, {\n      className: \"Form\",\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, submitted ? React.createElement(Spinner, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }) : form, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: {\n        height: '25px',\n        margin: '25px 20px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }), React.createElement(ButtonClass, {\n      onClick: this.uploadWidget,\n      color: \"primary\",\n      variant: \"outlined\",\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, \"Add Image\"), React.createElement(\"div\", {\n      style: {\n        height: '25px',\n        margin: '20px 20px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }), React.createElement(ButtonClass, {\n      color: \"primary\",\n      variant: \"contained\",\n      type: \"submit\",\n      disabled: submitted,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, submitted && 'Your form is submitted!' || !submitted && 'Submit')));\n  }\n\n}\n\nexport default connect(null, {\n  createTalk\n})(CreateTalk);","map":{"version":3,"sources":["/Users/pakchu/Desktop/CIM-All-Code/blog-auth-redux/src/Components/CreateTalk/CreateTalk.js"],"names":["React","Component","ButtonClass","formArray","ValidatorForm","Input","Spinner","connect","createTalk","CreateTalk","state","formData","title","talk","picture","submitted","uploadPictureToggle","uploadWidget","window","cloudinary","openUploadWidget","cloud_name","upload_preset","tags","error","result","console","log","event","info","secure_url","setState","handleSubmit","preventDefault","props","handleChange","target","name","value","render","form","map","field","index","input","label","height","margin"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport ButtonClass from '../../Factory/Button/ButtonClass'\nimport formArray from './CreateTalkConfig';\nimport { ValidatorForm } from 'react-material-ui-form-validator';\nimport Input from '../../Factory/Input/InputClass';\nimport Spinner from '../../Factory/Spinner/Spinner';\nimport { connect } from 'react-redux';\nimport { createTalk } from '../../redux/action/talkAction';\n\nclass CreateTalk extends Component {\n\n  state = {\n    formData: {\n      title: '',\n      talk: '',\n      picture: ''\n    },\n    submitted: false,\n    uploadPictureToggle: false\n  }\n  \n  uploadWidget = () => {\n    window.cloudinary.openUploadWidget({ cloud_name: 'dy6xduf53', upload_preset: 'gxaofwpa', tags:['hamster']},\n    (error, result)  => {\n        if (error) {\n          console.log(error)\n        } else {\n          \n          if (result.event === 'success') {\n            console.log(result.info.secure_url)\n            const { formData } = this.state;\n            formData['picture'] = result.info.secure_url\n            this.setState({\n              ...this.state, \n              formData, \n\n            })\n          }\n\n        }\n    });\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n\n    this.props.CreateTalk(this.state.formData)\n  }\n\n  handleChange = (event) => {\n  \n    const { formData } = this.state;\n    formData[event.target.name] = event.target.value;\n    this.setState({ formData });\n  }\n\n  render() {\n\n    const {submitted} = this.state;\n\n    let form = (\n      formArray.map((field, index) => {\n          \n        return (\n          <div key={field.input.label}>\n              <Input \n                {...field}\n                {...this.state.formData}\n                handleInputChange={this.handleChange}\n              />\n              <br />\n          </div>\n        )\n      })\n    ) \n\n    return (\n      <div className='App'>\n\n     <ValidatorForm className='Form' onSubmit={this.handleSubmit}>\n            {\n                submitted ? <Spinner /> : form\n            }\n            <br />\n            <div style={{height: '25px',margin: '25px 20px'}}></div>\n\n\n            <ButtonClass \n              onClick={this.uploadWidget}\n              color=\"primary\"\n              variant=\"outlined\"\n              type=\"submit\"\n              >\n                Add Image\n           </ButtonClass>\n\n            <div style={{height: '25px',margin: '20px 20px'}}></div>\n            <ButtonClass \n              color=\"primary\"\n              variant=\"contained\"\n              type=\"submit\"\n              disabled={submitted}\n              > \n              {\n                  (submitted && 'Your form is submitted!')\n                  || (!submitted && 'Submit')\n              }\n            </ButtonClass>\n            \n          </ValidatorForm>\n\n\n\n      </div>\n    )\n  }\n}\n\nexport default connect(null, { createTalk })(CreateTalk)"]},"metadata":{},"sourceType":"module"}