{"ast":null,"code":"var _jsxFileName = \"/Users/pakchu/Desktop/CIM-All-Code/advanced-form/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport Input from './Input/Input';\nimport ButtonClass from './Button/Button';\nexport default class App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      formArray: [{\n        input: {\n          style: {\n            width: '250px',\n            marginTop: '5px'\n          },\n          id: 'input-name',\n          label: 'Name',\n          value: '',\n          type: 'name',\n          required: true\n        }\n      }, {\n        input: {\n          style: {\n            width: '250px',\n            marginTop: '5px'\n          },\n          id: 'input-email',\n          label: 'Email',\n          value: '',\n          type: 'email',\n          required: true\n        }\n      }, {\n        input: {\n          style: {\n            width: '250px',\n            marginTop: '5px'\n          },\n          id: 'input-password',\n          label: 'password',\n          value: '',\n          type: 'password',\n          required: true\n        }\n      }, {\n        input: {\n          style: {\n            width: '250px',\n            marginTop: '5px'\n          },\n          id: 'input-gender',\n          label: 'Select',\n          value: '',\n          select: true,\n          required: true,\n          type: 'select',\n          gender: ['male', 'female', 'undefined']\n        }\n      }, {\n        input: {\n          style: {\n            width: '250px',\n            marginTop: '5px'\n          },\n          id: 'input-multiline',\n          label: 'Tell us something',\n          value: '',\n          multiline: true,\n          required: false,\n          rows: 4\n        }\n      }]\n    };\n\n    this.handleInputChange = event => {\n      console.log(event.target.name, event.target.value);\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.handleFormSubmit = event => {\n      event.preventDefault();\n      this.form.reset();\n    };\n  }\n\n  render() {\n    return React.createElement(\"form\", {\n      className: \"App\",\n      ref: ref => this.form = ref,\n      onSubmit: this.handleFormSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, this.state.formArray.map((field, index) => {\n      return React.createElement(\"div\", {\n        key: field.input.label,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, React.createElement(Input, {\n        id: field.input.id,\n        label: field.input.label,\n        required: field.input.required,\n        style: field.input.style,\n        name: field.input.type,\n        handleInputChange: this.handleInputChange,\n        multiline: field.input.multiline,\n        rows: field.input.rows,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }));\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }), React.createElement(ButtonClass, {\n      color: \"primary\",\n      variant: \"contained\",\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, \"Submit\"));\n  }\n\n}","map":{"version":3,"sources":["/Users/pakchu/Desktop/CIM-All-Code/advanced-form/src/App.js"],"names":["React","Component","Input","ButtonClass","App","state","formArray","input","style","width","marginTop","id","label","value","type","required","select","gender","multiline","rows","handleInputChange","event","console","log","target","name","setState","handleFormSubmit","preventDefault","form","reset","render","ref","map","field","index"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport './App.css';\nimport Input from './Input/Input';\nimport ButtonClass from './Button/Button';\n\nexport default class App extends Component {\n\n  state = {\n    formArray: [\n      {\n        input: {\n          style: {\n            width: '250px',\n            marginTop: '5px'\n          },\n          id: 'input-name',\n          label: 'Name',\n          value: '',\n          type: 'name',\n          required: true\n        }\n      },\n      {\n        input: {\n          style: {\n            width: '250px',\n            marginTop: '5px'\n          },\n          id: 'input-email',\n          label: 'Email',\n          value: '',\n          type: 'email',\n          required: true\n        }\n      },\n      {\n        input: {\n          style: {\n            width: '250px',\n            marginTop: '5px'\n          },\n          id: 'input-password',\n          label: 'password',\n          value: '',\n          type: 'password',\n          required: true\n        }\n      },\n      {\n        input: {\n          style: {\n            width: '250px',\n            marginTop: '5px'\n          },\n          id: 'input-gender',\n          label: 'Select',\n          value: '',\n          select: true,\n          required: true,\n          type: 'select',\n          gender: ['male', 'female', 'undefined']\n        }\n      },\n      {\n        input: {\n          style: {\n            width: '250px',\n            marginTop: '5px'\n          },\n          id: 'input-multiline',\n          label: 'Tell us something',\n          value: '',\n          multiline: true,\n          required: false,\n          rows: 4\n        }\n      }\n    ]\n  }\n\n  handleInputChange = (event) => {\n    console.log(event.target.name, event.target.value)\n\n    this.setState({\n      [event.target.name]: event.target.value\n    })\n\n  }\n\n  handleFormSubmit = (event) => {\n    event.preventDefault();\n    this.form.reset()\n  }\n\n  render() {\n    return (\n      <form className='App' ref={(ref) => this.form = ref} onSubmit={this.handleFormSubmit}>\n        {\n          this.state.formArray.map((field, index) => {\n            \n            return (\n              <div key={field.input.label}>\n                  <Input \n                    id={field.input.id}\n                    label={field.input.label}\n                    required={field.input.required}\n                    style={field.input.style}\n                    name={field.input.type}\n                    handleInputChange={this.handleInputChange}\n                    multiline={field.input.multiline}\n                    rows={field.input.rows}\n                  />\n                  <br />\n              </div>\n            )\n          })\n        }\n         <br />\n         \n        <ButtonClass \n          color=\"primary\"\n          variant=\"contained\"\n          type=\"submit\"\n          >Submit</ButtonClass>\n        \n      </form>\n    )\n  }\n}\n\n"]},"metadata":{},"sourceType":"module"}