{"ast":null,"code":"var _jsxFileName = \"/Users/pakchu/Desktop/CIM-All-Code/blog-auth-redux/src/Components/Signup/Signup.js\";\nimport React, { Component } from 'react';\nimport './Signup.css';\nimport Input from '../../Factory/Input/InputClass';\nimport ButtonClass from '../../Factory/Button/ButtonClass';\nimport { ValidatorForm } from 'react-material-ui-form-validator';\nimport formArray from './SignUpConfig';\nexport default class Signup extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      formData: {\n        name: '',\n        email: '',\n        password: '',\n        confirmPassword: '',\n        gender: ''\n      },\n      submitted: false\n    };\n\n    this.handleChange = event => {\n      const formData = this.state.formData;\n      formData[event.target.name] = event.target.value;\n      this.setState({\n        formData\n      });\n    };\n\n    this.handleSubmit = () => {\n      this.setState({\n        submitted: true\n      }, () => {\n        setTimeout(() => this.setState({\n          submitted: false\n        }), 5000);\n      });\n    };\n  }\n\n  componentDidMount() {\n    // custom rule will have name 'isPasswordMatch'\n    ValidatorForm.addValidationRule('isPasswordMatch', value => {\n      const formData = this.state.formData;\n\n      if (value !== formData.password) {\n        return false;\n      }\n\n      return true;\n    });\n  }\n\n  render() {\n    const submitted = this.state.submitted;\n    return React.createElement(ValidatorForm, {\n      className: \"Form\",\n      ref: ref => this.form = ref,\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, formArray.map((field, index) => {\n      return React.createElement(\"div\", {\n        key: field.input.label,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(Input, Object.assign({}, field, this.state.formData, {\n        handleInputChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      })), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }));\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }), React.createElement(ButtonClass, {\n      color: \"primary\",\n      variant: \"contained\",\n      type: \"submit\",\n      disabled: submitted,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, submitted && 'Your form is submitted!' || !submitted && 'Submit'));\n  }\n\n}","map":{"version":3,"sources":["/Users/pakchu/Desktop/CIM-All-Code/blog-auth-redux/src/Components/Signup/Signup.js"],"names":["React","Component","Input","ButtonClass","ValidatorForm","formArray","Signup","state","formData","name","email","password","confirmPassword","gender","submitted","handleChange","event","target","value","setState","handleSubmit","setTimeout","componentDidMount","addValidationRule","render","ref","form","map","field","index","input","label"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,cAAP;AACA,OAAOC,KAAP,MAAkB,gCAAlB;AACA,OAAOC,WAAP,MAAwB,kCAAxB;AACA,SAASC,aAAT,QAA8B,kCAA9B;AACA,OAAOC,SAAP,MAAsB,gBAAtB;AAEA,eAAe,MAAMC,MAAN,SAAqBL,SAArB,CAA+B;AAAA;AAAA;AAAA,SAE5CM,KAF4C,GAEpC;AACNC,MAAAA,QAAQ,EAAE;AACRC,QAAAA,IAAI,EAAE,EADE;AAERC,QAAAA,KAAK,EAAE,EAFC;AAGRC,QAAAA,QAAQ,EAAE,EAHF;AAIRC,QAAAA,eAAe,EAAE,EAJT;AAKRC,QAAAA,MAAM,EAAE;AALA,OADJ;AAQNC,MAAAA,SAAS,EAAE;AARL,KAFoC;;AAAA,SAyB5CC,YAzB4C,GAyB5BC,KAAD,IAAW;AAAA,YAChBR,QADgB,GACH,KAAKD,KADF,CAChBC,QADgB;AAExBA,MAAAA,QAAQ,CAACQ,KAAK,CAACC,MAAN,CAAaR,IAAd,CAAR,GAA8BO,KAAK,CAACC,MAAN,CAAaC,KAA3C;AACA,WAAKC,QAAL,CAAc;AAAEX,QAAAA;AAAF,OAAd;AACD,KA7B2C;;AAAA,SA+B5CY,YA/B4C,GA+B7B,MAAM;AACjB,WAAKD,QAAL,CAAc;AAAEL,QAAAA,SAAS,EAAE;AAAb,OAAd,EAAmC,MAAM;AACrCO,QAAAA,UAAU,CAAC,MAAM,KAAKF,QAAL,CAAc;AAAEL,UAAAA,SAAS,EAAE;AAAb,SAAd,CAAP,EAA4C,IAA5C,CAAV;AACH,OAFD;AAGH,KAnC2C;AAAA;;AAa5CQ,EAAAA,iBAAiB,GAAG;AAClB;AACAlB,IAAAA,aAAa,CAACmB,iBAAd,CAAgC,iBAAhC,EAAoDL,KAAD,IAAW;AAAA,YAClDV,QADkD,GACrC,KAAKD,KADgC,CAClDC,QADkD;;AAE1D,UAAIU,KAAK,KAAKV,QAAQ,CAACG,QAAvB,EAAiC;AAC7B,eAAO,KAAP;AACH;;AACD,aAAO,IAAP;AACH,KAND;AAOD;;AAgBDa,EAAAA,MAAM,GAAG;AAAA,UAEAV,SAFA,GAEc,KAAKP,KAFnB,CAEAO,SAFA;AAIP,WACE,oBAAC,aAAD;AAAe,MAAA,SAAS,EAAC,MAAzB;AAAgC,MAAA,GAAG,EAAGW,GAAD,IAAS,KAAKC,IAAL,GAAYD,GAA1D;AAA+D,MAAA,QAAQ,EAAE,KAAKL,YAA9E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEMf,SAAS,CAACsB,GAAV,CAAc,CAACC,KAAD,EAAQC,KAAR,KAAkB;AAEhC,aACE;AAAK,QAAA,GAAG,EAAED,KAAK,CAACE,KAAN,CAAYC,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,KAAD,oBACMH,KADN,EAEM,KAAKrB,KAAL,CAAWC,QAFjB;AAGE,QAAA,iBAAiB,EAAE,KAAKO,YAH1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADJ,EAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QANJ,CADF;AAUD,KAZC,CAFN,EAgBG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAhBH,EAkBE,oBAAC,WAAD;AACE,MAAA,KAAK,EAAC,SADR;AAEE,MAAA,OAAO,EAAC,WAFV;AAGE,MAAA,IAAI,EAAC,QAHP;AAIE,MAAA,QAAQ,EAAED,SAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAOOA,SAAS,IAAI,yBAAd,IACI,CAACA,SAAD,IAAc,QARxB,CAlBF,CADF;AAiCD;;AA3E2C","sourcesContent":["import React, { Component } from 'react'\nimport './Signup.css';\nimport Input from '../../Factory/Input/InputClass'\nimport ButtonClass from '../../Factory/Button/ButtonClass';\nimport { ValidatorForm } from 'react-material-ui-form-validator';\nimport formArray from './SignUpConfig';\n\nexport default class Signup extends Component {\n\n  state = {\n    formData: {\n      name: '',\n      email: '',\n      password: '',\n      confirmPassword: '',\n      gender: ''\n    },\n    submitted: false,\n  }\n\n  componentDidMount() {\n    // custom rule will have name 'isPasswordMatch'\n    ValidatorForm.addValidationRule('isPasswordMatch', (value) => {\n        const { formData } = this.state;\n        if (value !== formData.password) {\n            return false;\n        }\n        return true;\n    });\n  }\n\n\n  handleChange = (event) => {\n    const { formData } = this.state;\n    formData[event.target.name] = event.target.value;\n    this.setState({ formData });\n  }\n\n  handleSubmit = () => {\n      this.setState({ submitted: true }, () => {\n          setTimeout(() => this.setState({ submitted: false }), 5000);\n      });\n  }\n\n\n  render() {\n\n    const {submitted } = this.state;\n\n    return (\n      <ValidatorForm className='Form' ref={(ref) => this.form = ref} onSubmit={this.handleSubmit}>\n        {\n            formArray.map((field, index) => {\n            \n            return (\n              <div key={field.input.label}>\n                  <Input \n                    {...field}\n                    {...this.state.formData}\n                    handleInputChange={this.handleChange}\n                  />\n                  <br />\n              </div>\n            )\n          })\n        }\n         <br />\n         \n        <ButtonClass \n          color=\"primary\"\n          variant=\"contained\"\n          type=\"submit\"\n          disabled={submitted}\n          > \n          {\n              (submitted && 'Your form is submitted!')\n              || (!submitted && 'Submit')\n          }\n        </ButtonClass>\n        \n      </ValidatorForm>\n    )\n  }\n}\n\n"]},"metadata":{},"sourceType":"module"}