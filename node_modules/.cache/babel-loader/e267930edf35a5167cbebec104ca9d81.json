{"ast":null,"code":"import { AUTH_USER_SUCCESSFUL, AUTH_USER_LOGOUT, AUTH_SIGNUP_SUCCESSFUL } from '../actionTypes/actionTypes';\nimport setAuthToken from '../../lib/setAuthToken';\nimport Axios from '../../lib/Axios';\nexport const signup = userInfo => async dispatch => {\n  try {\n    let success = await Axios.post('/users/sign-up', userInfo);\n    console.log(JSON.stringify(success));\n    messageHandler(success);\n  } catch (error) {\n    console.log(error);\n    return error;\n  }\n};\nexport const logout = () => dispatch => {\n  localStorage.removeItem('jwtToken');\n  setAuthToken(false);\n  dispatch({\n    type: AUTH_USER_LOGOUT\n  });\n};\nexport const setAuthSuccessUser = userInfo => dispatch => {\n  dispatch({\n    type: AUTH_USER_SUCCESSFUL,\n    payload: userInfo\n  });\n};\n\nconst messageHandler = success => dispatch => {\n  dispatch({\n    type: AUTH_SIGNUP_SUCCESSFUL,\n    payload: success\n  });\n};","map":{"version":3,"sources":["/Users/pakchu/Desktop/CIM-All-Code/blog-auth-redux/src/redux/action/authUserAction.js"],"names":["AUTH_USER_SUCCESSFUL","AUTH_USER_LOGOUT","AUTH_SIGNUP_SUCCESSFUL","setAuthToken","Axios","signup","userInfo","dispatch","success","post","console","log","JSON","stringify","messageHandler","error","logout","localStorage","removeItem","type","setAuthSuccessUser","payload"],"mappings":"AAAA,SAASA,oBAAT,EAA+BC,gBAA/B,EAAiDC,sBAAjD,QAA+E,4BAA/E;AACA,OAAOC,YAAP,MAAyB,wBAAzB;AACA,OAAOC,KAAP,MAAkB,iBAAlB;AAEA,OAAO,MAAMC,MAAM,GAAIC,QAAD,IAAc,MAAMC,QAAN,IAAkB;AAEpD,MAAI;AACF,QAAIC,OAAO,GAAG,MAAMJ,KAAK,CAACK,IAAN,CAAW,gBAAX,EAA6BH,QAA7B,CAApB;AACAI,IAAAA,OAAO,CAACC,GAAR,CAAYC,IAAI,CAACC,SAAL,CAAeL,OAAf,CAAZ;AACAM,IAAAA,cAAc,CAACN,OAAD,CAAd;AAED,GALD,CAKE,OAAOO,KAAP,EAAc;AACdL,IAAAA,OAAO,CAACC,GAAR,CAAYI,KAAZ;AACA,WAAOA,KAAP;AACD;AAEF,CAZM;AAcP,OAAO,MAAMC,MAAM,GAAG,MAAMT,QAAQ,IAAI;AACrCU,EAAAA,YAAY,CAACC,UAAb,CAAwB,UAAxB;AACAf,EAAAA,YAAY,CAAC,KAAD,CAAZ;AACAI,EAAAA,QAAQ,CAAC;AACPY,IAAAA,IAAI,EAAElB;AADC,GAAD,CAAR;AAGF,CANM;AAQP,OAAO,MAAMmB,kBAAkB,GAAId,QAAD,IAAcC,QAAQ,IAAI;AAC1DA,EAAAA,QAAQ,CAAC;AACPY,IAAAA,IAAI,EAAEnB,oBADC;AAEPqB,IAAAA,OAAO,EAAEf;AAFF,GAAD,CAAR;AAID,CALM;;AAOP,MAAMQ,cAAc,GAAIN,OAAD,IAAaD,QAAQ,IAAI;AAE9CA,EAAAA,QAAQ,CAAC;AACPY,IAAAA,IAAI,EAAEjB,sBADC;AAEPmB,IAAAA,OAAO,EAAEb;AAFF,GAAD,CAAR;AAKD,CAPD","sourcesContent":["import { AUTH_USER_SUCCESSFUL, AUTH_USER_LOGOUT, AUTH_SIGNUP_SUCCESSFUL } from '../actionTypes/actionTypes';\nimport setAuthToken from '../../lib/setAuthToken';\nimport Axios from '../../lib/Axios';\n\nexport const signup = (userInfo) => async dispatch => {\n\n  try {\n    let success = await Axios.post('/users/sign-up', userInfo);\n    console.log(JSON.stringify(success))\n    messageHandler(success);\n\n  } catch (error) {\n    console.log(error)\n    return error;\n  }\n \n}\n\nexport const logout = () => dispatch => {\n   localStorage.removeItem('jwtToken');\n   setAuthToken(false);\n   dispatch({\n     type: AUTH_USER_LOGOUT\n   });\n}\n\nexport const setAuthSuccessUser = (userInfo) => dispatch => {\n  dispatch({\n    type: AUTH_USER_SUCCESSFUL,\n    payload: userInfo\n  })\n}\n\nconst messageHandler = (success) => dispatch => {\n\n  dispatch({\n    type: AUTH_SIGNUP_SUCCESSFUL,\n    payload: success\n  })\n\n}"]},"metadata":{},"sourceType":"module"}