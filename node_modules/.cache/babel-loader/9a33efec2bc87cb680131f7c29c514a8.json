{"ast":null,"code":"var _jsxFileName = \"/Users/pakchu/Desktop/CIM-All-Code/blog-auth-redux/src/Components/ShowAllUserTalks/ShowAllUserTalks.js\";\nimport React, { Component } from 'react';\nimport Talk from '../Talk/Talk';\nimport Grid from '@material-ui/core/Grid';\nimport { withStyles } from '@material-ui/core/styles';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { getAllUserTalks } from '../../redux/action/talkAction';\nimport Spinner from '../../Factory/Spinner/Spinner';\nconst styles = {\n  root: {\n    flexGrow: 1,\n    marginTop: 15\n  }\n};\n\nclass AllUserTalks extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isFetching: false\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      isFetching: true\n    });\n    this.props.getAllUserTalks(this.props.authUser.user.id).then(allUserTalks => {\n      this.setState({\n        isFetching: false\n      });\n    }).catch(error => {\n      this.setState({\n        isFetching: false\n      });\n      console.log(error);\n    });\n  }\n\n  render() {\n    const userTalks = this.props.talk.userTalks;\n    console.log(this.props.match);\n    let userTalksGrid = React.createElement(Grid, {\n      container: true,\n      justify: \"center\",\n      spacing: 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, userTalks.map(talk => {\n      return React.createElement(Grid, {\n        key: talk._id,\n        item: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, React.createElement(Talk, Object.assign({}, talk, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      })));\n    }));\n    return React.createElement(\"div\", {\n      className: this.props.classes.root,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, this.state.isFetching ? React.createElement(Spinner, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }) : userTalksGrid);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    talk: state.talk,\n    authUser: state.authUser\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getAllUserTalks\n})(withRouter(withStyles(styles)(AllUserTalks)));","map":{"version":3,"sources":["/Users/pakchu/Desktop/CIM-All-Code/blog-auth-redux/src/Components/ShowAllUserTalks/ShowAllUserTalks.js"],"names":["React","Component","Talk","Grid","withStyles","connect","withRouter","getAllUserTalks","Spinner","styles","root","flexGrow","marginTop","AllUserTalks","state","isFetching","componentDidMount","setState","props","authUser","user","id","then","allUserTalks","catch","error","console","log","render","userTalks","talk","match","userTalksGrid","map","_id","classes","mapStateToProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,IAAP,MAAiB,cAAjB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAAQC,eAAR,QAA8B,+BAA9B;AACA,OAAOC,OAAP,MAAoB,+BAApB;AAEA,MAAMC,MAAM,GAAG;AACbC,EAAAA,IAAI,EAAE;AACJC,IAAAA,QAAQ,EAAE,CADN;AAEJC,IAAAA,SAAS,EAAE;AAFP;AADO,CAAf;;AAOA,MAAMC,YAAN,SAA2BZ,SAA3B,CAAqC;AAAA;AAAA;AAAA,SAGnCa,KAHmC,GAG3B;AACNC,MAAAA,UAAU,EAAE;AADN,KAH2B;AAAA;;AAOnCC,EAAAA,iBAAiB,GAAG;AAElB,SAAKC,QAAL,CAAc;AACZF,MAAAA,UAAU,EAAE;AADA,KAAd;AAIA,SAAKG,KAAL,CAAWX,eAAX,CAA2B,KAAKW,KAAL,CAAWC,QAAX,CAAoBC,IAApB,CAAyBC,EAApD,EACKC,IADL,CACWC,YAAY,IAAI;AAErB,WAAKN,QAAL,CAAc;AACZF,QAAAA,UAAU,EAAE;AADA,OAAd;AAGD,KANL,EAOKS,KAPL,CAOWC,KAAK,IAAI;AACd,WAAKR,QAAL,CAAc;AACZF,QAAAA,UAAU,EAAE;AADA,OAAd;AAGAW,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD,KAZL;AAaD;;AAGDG,EAAAA,MAAM,GAAG;AAAA,UAECC,SAFD,GAEe,KAAKX,KAAL,CAAWY,IAF1B,CAECD,SAFD;AAIPH,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKT,KAAL,CAAWa,KAAvB;AAEA,QAAIC,aAAa,GACf,oBAAC,IAAD;AAAM,MAAA,SAAS,MAAf;AAAgB,MAAA,OAAO,EAAC,QAAxB;AAAkC,MAAA,OAAO,EAAE,CAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEEH,SAAS,CAACI,GAAV,CAAeH,IAAD,IAAU;AACtB,aACE,oBAAC,IAAD;AAAM,QAAA,GAAG,EAAEA,IAAI,CAACI,GAAhB;AAAsB,QAAA,IAAI,MAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD,oBAAUJ,IAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADF,CADF;AAKG,KANL,CAFF,CADF;AAcA,WACE;AAAK,MAAA,SAAS,EAAE,KAAKZ,KAAL,CAAWiB,OAAX,CAAmBzB,IAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKI,KAAL,CAAWC,UAAX,GAAwB,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAxB,GAAsCiB,aAD3C,CADF;AAKD;;AAtDkC;;AAyDrC,MAAMI,eAAe,GAAItB,KAAD,IAAW;AACjC,SAAO;AACLgB,IAAAA,IAAI,EAAEhB,KAAK,CAACgB,IADP;AAELX,IAAAA,QAAQ,EAAEL,KAAK,CAACK;AAFX,GAAP;AAID,CALD;;AAOA,eAAed,OAAO,CAAC+B,eAAD,EAAkB;AAAE7B,EAAAA;AAAF,CAAlB,CAAP,CAA8CD,UAAU,CAACF,UAAU,CAACK,MAAD,CAAV,CAAmBI,YAAnB,CAAD,CAAxD,CAAf","sourcesContent":["import React, { Component } from 'react'\nimport Talk from '../Talk/Talk'\nimport Grid from '@material-ui/core/Grid';\nimport { withStyles } from '@material-ui/core/styles';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom'\nimport {getAllUserTalks} from '../../redux/action/talkAction';\nimport Spinner from '../../Factory/Spinner/Spinner'\n\nconst styles = {\n  root: {\n    flexGrow: 1,\n    marginTop: 15,\n  }\n}\n\nclass AllUserTalks extends Component {\n\n\n  state = {\n    isFetching: false,\n  }\n\n  componentDidMount() {\n\n    this.setState({\n      isFetching: true\n    })\n\n    this.props.getAllUserTalks(this.props.authUser.user.id)\n        .then( allUserTalks => {\n  \n          this.setState({\n            isFetching: false\n          })\n        })\n        .catch(error => {\n          this.setState({\n            isFetching: false\n          })\n          console.log(error)\n        })\n  }\n\n\n  render() {\n\n    const { userTalks } = this.props.talk; \n\n    console.log(this.props.match)\n\n    let userTalksGrid = (\n      <Grid container justify=\"center\"  spacing={1}>\n      {\n        userTalks.map((talk) => {\n          return (\n            <Grid key={talk._id}  item>\n              <Talk {...talk} />\n            </Grid>\n             )\n            })\n          }\n      </Grid>\n    )\n\n    return (\n      <div className={this.props.classes.root}>\n          {this.state.isFetching ? <Spinner /> : userTalksGrid}\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    talk: state.talk,\n    authUser: state.authUser\n  }\n}\n\nexport default connect(mapStateToProps, { getAllUserTalks })(withRouter(withStyles(styles)(AllUserTalks)));"]},"metadata":{},"sourceType":"module"}