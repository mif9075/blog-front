{"ast":null,"code":"var _jsxFileName = \"/Users/pakchu/Desktop/CIM-All-Code/advanced-form/src/Input/Input.js\";\n\n/* eslint-disable no-unused-expressions */\n\n/* eslint-disable no-duplicate-case */\n\n/* eslint-disable no-fallthrough */\nimport React from 'react';\nimport { TextField, MenuItem } from '@material-ui/core';\n\nconst Input = props => {\n  const input = props.input;\n  let dynamicInputField = null;\n  console.log(props);\n\n  switch (input.type) {\n    case 'text':\n      dynamicInputField = React.createElement(TextField, {\n        id: input.id,\n        label: input.label,\n        required: input.required,\n        style: input.style,\n        name: input.name,\n        type: input.type,\n        onChange: props.handleInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      });\n      break;\n\n    case 'email':\n      dynamicInputField = React.createElement(TextField, {\n        id: input.id,\n        label: input.label,\n        required: input.required,\n        style: input.style,\n        name: input.name,\n        type: input.type,\n        onChange: props.handleInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      });\n      break;\n\n    case 'password':\n      dynamicInputField = React.createElement(TextField, {\n        id: input.id,\n        label: input.label,\n        required: input.required,\n        style: input.style,\n        name: input.name,\n        type: input.type,\n        onChange: props.handleInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      });\n      break;\n\n    case 'select':\n      dynamicInputField = React.createElement(TextField, {\n        id: input.id,\n        type: input.type,\n        select: input.select,\n        label: input.label,\n        style: input.style,\n        name: input.name,\n        onChange: props.handleInputChange,\n        helperText: input.helperText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, input.gender.map(option => {\n        return React.createElement(MenuItem, {\n          key: option,\n          value: option,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68\n          },\n          __self: this\n        }, option);\n      }));\n      break;\n\n    case 'multiline':\n      dynamicInputField = React.createElement(TextField, {\n        id: input.id,\n        label: input.label,\n        required: input.required,\n        style: input.style,\n        name: input.name,\n        type: input.name,\n        onChange: props.handleInputChange,\n        rows: input.rows,\n        multiline: input.multiline,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      });\n      break;\n\n    default:\n      return null;\n  }\n\n  return React.createElement(React.Fragment, null, dynamicInputField);\n};\n\nexport default Input;","map":{"version":3,"sources":["/Users/pakchu/Desktop/CIM-All-Code/advanced-form/src/Input/Input.js"],"names":["React","TextField","MenuItem","Input","props","input","dynamicInputField","console","log","type","id","label","required","style","name","handleInputChange","select","helperText","gender","map","option","rows","multiline"],"mappings":"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","sourcesContent":["/* eslint-disable no-unused-expressions */\n/* eslint-disable no-duplicate-case */\n/* eslint-disable no-fallthrough */\nimport React from 'react';\nimport {TextField, MenuItem} from '@material-ui/core';\n\n\n\n\nconst Input = (props) => {\n  const { input } = props;\n\n  let dynamicInputField = null \n  console.log(props)\n  switch (input.type) {\n\n    case('text'):\n\n      dynamicInputField = <TextField \n                                id={input.id}\n                                label={input.label}\n                                required={input.required}\n                                style={input.style}\n                                name={input.name}\n                                type={input.type}\n                                onChange={props.handleInputChange}\n                          />\n      break;\n\n    case('email'):\n        dynamicInputField = <TextField \n                              id={input.id}\n                              label={input.label}\n                              required={input.required}\n                              style={input.style}\n                              name={input.name}\n                              type={input.type}\n                              onChange={props.handleInputChange}\n                            />\n        break;                   \n      \n    case('password'):\n        dynamicInputField = <TextField \n                              id={input.id}\n                              label={input.label}\n                              required={input.required}\n                              style={input.style}\n                              name={input.name}\n                              type={input.type}\n                              onChange={props.handleInputChange}\n                            />\n        break; \n    case('select'):\n    \n        dynamicInputField = <TextField\n                              id={input.id}\n                              type={input.type}\n                              select={input.select}\n                              label={input.label}\n                              style={input.style}\n                              name={input.name}\n                              onChange={props.handleInputChange}\n                              helperText={input.helperText}\n                            >\n                            {\n                              input.gender.map(option => {\n                                return (\n                                  <MenuItem key={option} value={option}>\n                                    {option}\n                                  </MenuItem>\n                                )\n                            })}\n                          </TextField>\n      break;\n    case('multiline'):\n                 \n      dynamicInputField = <TextField \n                            id={input.id}\n                            label={input.label}\n                            required={input.required}\n                            style={input.style}\n                            name={input.name}\n                            type={input.name}\n                            onChange={props.handleInputChange}\n                            rows={input.rows}\n                            multiline={input.multiline}\n                          />\n\n      break;\n\n    default: \n      return null;\n  }\n\n\n\n  return (\n    <>\n      {dynamicInputField}\n    </>\n  )\n}\n\nexport default Input"]},"metadata":{},"sourceType":"module"}