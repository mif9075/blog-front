{"ast":null,"code":"var _jsxFileName = \"/Users/pakchu/Desktop/CIM-All-Code/blog-auth-redux/src/Components/UserProfileInfo/UserProfileInfo.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport InputClass from '../../Factory/Input/InputClass';\nimport UserProfileInfoArray from './UserProfileInfoConfig';\nimport { ValidatorForm } from 'react-material-ui-form-validator';\nimport Spinner from '../../Factory/Spinner/Spinner';\n\nclass UserProfileInfo extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      userData: {\n        email: '',\n        username: ''\n      },\n      submitted: false\n    };\n\n    this.handleInputChange = event => {\n      const userData = this.state.userData;\n      userData[event.target.name] = event.target.value;\n      this.setState({\n        userData\n      });\n    };\n\n    this.handleSubmit = event => {};\n  }\n\n  componentDidMount() {\n    this.setState({\n      userData: {\n        email: this.props.authUser.user.email,\n        username: this.props.authUser.user.username\n      }\n    });\n  }\n\n  render() {\n    console.log(this.state);\n    return React.createElement(ValidatorForm, {\n      className: \"Form\",\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, UserProfileInfoArray.map(form => {\n      return React.createElement(\"div\", {\n        key: form.input.label,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, React.createElement(InputClass, Object.assign({}, form, this.state.userData, {\n        handleInputChange: this.handleInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      })));\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    authUser: state.authUser\n  };\n};\n\nexport default connect(mapStateToProps, null)(UserProfileInfo);","map":{"version":3,"sources":["/Users/pakchu/Desktop/CIM-All-Code/blog-auth-redux/src/Components/UserProfileInfo/UserProfileInfo.js"],"names":["React","Component","connect","InputClass","UserProfileInfoArray","ValidatorForm","Spinner","UserProfileInfo","state","userData","email","username","submitted","handleInputChange","event","target","name","value","setState","handleSubmit","componentDidMount","props","authUser","user","render","console","log","map","form","input","label","mapStateToProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,UAAP,MAAuB,gCAAvB;AACA,OAAOC,oBAAP,MAAiC,yBAAjC;AACA,SAASC,aAAT,QAA8B,kCAA9B;AACA,OAAOC,OAAP,MAAoB,+BAApB;;AAEA,MAAMC,eAAN,SAA8BN,SAA9B,CAAwC;AAAA;AAAA;AAAA,SAEtCO,KAFsC,GAE9B;AACNC,MAAAA,QAAQ,EAAE;AACRC,QAAAA,KAAK,EAAE,EADC;AAERC,QAAAA,QAAQ,EAAE;AAFF,OADJ;AAKNC,MAAAA,SAAS,EAAE;AALL,KAF8B;;AAAA,SAmBtCC,iBAnBsC,GAmBjBC,KAAD,IAAW;AAAA,YACrBL,QADqB,GACR,KAAKD,KADG,CACrBC,QADqB;AAE7BA,MAAAA,QAAQ,CAACK,KAAK,CAACC,MAAN,CAAaC,IAAd,CAAR,GAA8BF,KAAK,CAACC,MAAN,CAAaE,KAA3C;AACA,WAAKC,QAAL,CAAc;AAAET,QAAAA;AAAF,OAAd;AACD,KAvBqC;;AAAA,SAyBtCU,YAzBsC,GAyBtBL,KAAD,IAAW,CAEzB,CA3BqC;AAAA;;AAUtCM,EAAAA,iBAAiB,GAAG;AAClB,SAAKF,QAAL,CAAc;AACZT,MAAAA,QAAQ,EAAE;AACRC,QAAAA,KAAK,EAAE,KAAKW,KAAL,CAAWC,QAAX,CAAoBC,IAApB,CAAyBb,KADxB;AAERC,QAAAA,QAAQ,EAAE,KAAKU,KAAL,CAAWC,QAAX,CAAoBC,IAApB,CAAyBZ;AAF3B;AADE,KAAd;AAMD;;AAYDa,EAAAA,MAAM,GAAG;AACPC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKlB,KAAjB;AACA,WACE,oBAAC,aAAD;AAAe,MAAA,SAAS,EAAC,MAAzB;AAAgC,MAAA,QAAQ,EAAE,KAAKW,YAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEIf,oBAAoB,CAACuB,GAArB,CAA0BC,IAAD,IAAU;AACjC,aACE;AAAK,QAAA,GAAG,EAAEA,IAAI,CAACC,KAAL,CAAWC,KAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,UAAD,oBACMF,IADN,EAEM,KAAKpB,KAAL,CAAWC,QAFjB;AAGE,QAAA,iBAAiB,EAAE,KAAKI,iBAH1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADF,CADF;AASD,KAVD,CAFJ,CADF;AAiBD;;AAhDqC;;AAmDxC,MAAMkB,eAAe,GAAGvB,KAAK,IAAI;AAC/B,SAAO;AACLc,IAAAA,QAAQ,EAAEd,KAAK,CAACc;AADX,GAAP;AAGD,CAJD;;AAMA,eAAepB,OAAO,CAAC6B,eAAD,EAAkB,IAAlB,CAAP,CAA+BxB,eAA/B,CAAf","sourcesContent":["import React, { Component } from 'react'\nimport { connect } from 'react-redux';\nimport InputClass from '../../Factory/Input/InputClass';\nimport UserProfileInfoArray from './UserProfileInfoConfig';\nimport { ValidatorForm } from 'react-material-ui-form-validator';\nimport Spinner from '../../Factory/Spinner/Spinner'\n\nclass UserProfileInfo extends Component {\n\n  state = {\n    userData: {\n      email: '',\n      username: ''\n    },\n    submitted: false,\n  }\n\n  componentDidMount() {\n    this.setState({\n      userData: {\n        email: this.props.authUser.user.email,\n        username: this.props.authUser.user.username\n      }\n    })\n  }\n\n  handleInputChange = (event) => {\n    const { userData } = this.state;\n    userData[event.target.name] = event.target.value;\n    this.setState({ userData });\n  }\n\n  handleSubmit = (event) => {\n\n  }\n\n  render() {\n    console.log(this.state)\n    return (\n      <ValidatorForm className='Form' onSubmit={this.handleSubmit}>\n        {\n          UserProfileInfoArray.map((form) => {\n            return (\n              <div key={form.input.label}>\n                <InputClass \n                  {...form}\n                  {...this.state.userData}\n                  handleInputChange={this.handleInputChange}\n                />\n              </div>\n            )\n          })\n        }\n      </ValidatorForm>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    authUser: state.authUser\n  };\n};\n\nexport default connect(mapStateToProps, null)(UserProfileInfo);\n"]},"metadata":{},"sourceType":"module"}