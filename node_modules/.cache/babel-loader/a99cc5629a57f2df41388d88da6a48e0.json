{"ast":null,"code":"var _jsxFileName = \"/Users/pakchu/Desktop/CIM-All-Code/blog-auth-redux/src/Components/SeeTalk/SeeTalk.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { getTalkByID } from '../../redux/action/talkAction';\n\nclass SeeTalk extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      title: '',\n      image: '',\n      talk: ''\n    };\n  }\n\n  componentDidMount() {\n    if (this.props.location.state !== undefined) {\n      this.setState({\n        title: this.props.location.state.title,\n        image: this.props.location.state.image,\n        talk: this.props.location.state.talk\n      });\n    } else {\n      console.log(this.props.match.params.id);\n      this.props.getTalkByID(this.props.match.params.id);\n    }\n  }\n\n  render() {\n    const _this$state = this.state,\n          title = _this$state.title,\n          talk = _this$state.talk,\n          image = _this$state.image;\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, \"title \", title), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: image,\n      alt: \"hamster\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    })), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, talk));\n  }\n\n}\n\nexport default connect(null, {\n  getTalkByID\n})(SeeTalk);","map":{"version":3,"sources":["/Users/pakchu/Desktop/CIM-All-Code/blog-auth-redux/src/Components/SeeTalk/SeeTalk.js"],"names":["React","Component","connect","getTalkByID","SeeTalk","state","title","image","talk","componentDidMount","props","location","undefined","setState","console","log","match","params","id","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,WAAT,QAA4B,+BAA5B;;AAEA,MAAMC,OAAN,SAAsBH,SAAtB,CAAgC;AAAA;AAAA;AAAA,SAE9BI,KAF8B,GAEtB;AACNC,MAAAA,KAAK,EAAE,EADD;AAENC,MAAAA,KAAK,EAAE,EAFD;AAGNC,MAAAA,IAAI,EAAE;AAHA,KAFsB;AAAA;;AAQ9BC,EAAAA,iBAAiB,GAAG;AAElB,QAAI,KAAKC,KAAL,CAAWC,QAAX,CAAoBN,KAApB,KAA8BO,SAAlC,EAA6C;AAC3C,WAAKC,QAAL,CAAc;AACZP,QAAAA,KAAK,EAAE,KAAKI,KAAL,CAAWC,QAAX,CAAoBN,KAApB,CAA0BC,KADrB;AAEZC,QAAAA,KAAK,EAAE,KAAKG,KAAL,CAAWC,QAAX,CAAoBN,KAApB,CAA0BE,KAFrB;AAGZC,QAAAA,IAAI,EAAE,KAAKE,KAAL,CAAWC,QAAX,CAAoBN,KAApB,CAA0BG;AAHpB,OAAd;AAKD,KAND,MAMO;AACLM,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKL,KAAL,CAAWM,KAAX,CAAiBC,MAAjB,CAAwBC,EAApC;AACA,WAAKR,KAAL,CAAWP,WAAX,CAAuB,KAAKO,KAAL,CAAWM,KAAX,CAAiBC,MAAjB,CAAwBC,EAA/C;AACD;AAEF;;AAEDC,EAAAA,MAAM,GAAG;AAAA,wBAEwB,KAAKd,KAF7B;AAAA,UAECC,KAFD,eAECA,KAFD;AAAA,UAEQE,IAFR,eAEQA,IAFR;AAAA,UAEcD,KAFd,eAEcA,KAFd;AAIP,WACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAWD,KAAX,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK;AAAK,MAAA,GAAG,EAAEC,KAAV;AAAiB,MAAA,GAAG,EAAC,SAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAL,CAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIC,IAAJ,CAHF,CADF;AAOD;;AAlC6B;;AAqChC,eAAeN,OAAO,CAAC,IAAD,EAAO;AAAEC,EAAAA;AAAF,CAAP,CAAP,CAA+BC,OAA/B,CAAf","sourcesContent":["import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { getTalkByID } from '../../redux/action/talkAction';\n\nclass SeeTalk extends Component {\n\n  state = {\n    title: '',\n    image: '',\n    talk: ''\n  }\n\n  componentDidMount() {\n\n    if (this.props.location.state !== undefined) {\n      this.setState({\n        title: this.props.location.state.title,\n        image: this.props.location.state.image,\n        talk: this.props.location.state.talk\n      })\n    } else {\n      console.log(this.props.match.params.id)\n      this.props.getTalkByID(this.props.match.params.id)\n    }\n\n  }\n\n  render() {\n   \n    const { title, talk, image } = this.state\n\n    return (\n      <div className='App'>\n        <h1>title {title}</h1>\n        <div><img src={image} alt=\"hamster\"/></div>\n        <p>{talk}</p>\n      </div>\n    )\n  }\n}\n\nexport default connect(null, { getTalkByID })(SeeTalk);"]},"metadata":{},"sourceType":"module"}