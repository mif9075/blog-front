{"ast":null,"code":"import { CREATE_TALK, ERROR_CREATE_TALK } from '../actionTypes/actionTypes';\nimport Axios from '../../lib/Axios';\nexport const createTalk = talkInfo => async dispatch => {\n  let talkObj = {\n    id: talkInfo.id,\n    title: talkInfo.title,\n    talk: talkInfo.talk,\n    image: talkInfo.image\n  };\n\n  try {\n    let success = await Axios.post('/talk/create-talk', talkObj);\n    dispatch(successCreateTalk(success));\n  } catch (error) {\n    dispatch(errorCreateTalk(error));\n  }\n};\n\nconst successCreateTalk = createdTalk => dispatch => {\n  dispatch({\n    type: CREATE_TALK,\n    payload: createdTalk\n  });\n};\n\nconst errorCreateTalk = message => dispatch => {\n  dispatch({\n    type: ERROR_CREATE_TALK,\n    payload: message\n  });\n};","map":{"version":3,"sources":["/Users/pakchu/Desktop/CIM-All-Code/blog-auth-redux/src/redux/action/talkAction.js"],"names":["CREATE_TALK","ERROR_CREATE_TALK","Axios","createTalk","talkInfo","dispatch","talkObj","id","title","talk","image","success","post","successCreateTalk","error","errorCreateTalk","createdTalk","type","payload","message"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,iBAAtB,QAA+C,4BAA/C;AACA,OAAOC,KAAP,MAAkB,iBAAlB;AAEA,OAAO,MAAMC,UAAU,GAAIC,QAAD,IAAc,MAAMC,QAAN,IAAkB;AAExD,MAAIC,OAAO,GAAG;AACZC,IAAAA,EAAE,EAAEH,QAAQ,CAACG,EADD;AAEZC,IAAAA,KAAK,EAAEJ,QAAQ,CAACI,KAFJ;AAGZC,IAAAA,IAAI,EAAEL,QAAQ,CAACK,IAHH;AAIZC,IAAAA,KAAK,EAAEN,QAAQ,CAACM;AAJJ,GAAd;;AAOA,MAAI;AAEF,QAAIC,OAAO,GAAG,MAAMT,KAAK,CAACU,IAAN,CAAW,mBAAX,EAAgCN,OAAhC,CAApB;AAEAD,IAAAA,QAAQ,CAACQ,iBAAiB,CAACF,OAAD,CAAlB,CAAR;AAGD,GAPD,CAOE,OAAOG,KAAP,EAAc;AACdT,IAAAA,QAAQ,CAACU,eAAe,CAACD,KAAD,CAAhB,CAAR;AACD;AAEF,CApBM;;AAsBP,MAAMD,iBAAiB,GAAIG,WAAD,IAAiBX,QAAQ,IAAI;AACrDA,EAAAA,QAAQ,CAAC;AACPY,IAAAA,IAAI,EAAEjB,WADC;AAEPkB,IAAAA,OAAO,EAAEF;AAFF,GAAD,CAAR;AAID,CALD;;AAOA,MAAMD,eAAe,GAAII,OAAD,IAAad,QAAQ,IAAI;AAC/CA,EAAAA,QAAQ,CAAC;AACPY,IAAAA,IAAI,EAAEhB,iBADC;AAEPiB,IAAAA,OAAO,EAAEC;AAFF,GAAD,CAAR;AAID,CALD","sourcesContent":["import { CREATE_TALK, ERROR_CREATE_TALK } from '../actionTypes/actionTypes';\nimport Axios from '../../lib/Axios';\n\nexport const createTalk = (talkInfo) => async dispatch => {\n\n  let talkObj = {\n    id: talkInfo.id,\n    title: talkInfo.title, \n    talk: talkInfo.talk, \n    image: talkInfo.image\n  }\n\n  try {\n\n    let success = await Axios.post('/talk/create-talk', talkObj)\n\n    dispatch(successCreateTalk(success));\n\n\n  } catch (error) {\n    dispatch(errorCreateTalk(error))\n  }\n\n}\n\nconst successCreateTalk = (createdTalk) => dispatch => {\n  dispatch({\n    type: CREATE_TALK,\n    payload: createdTalk\n  })\n}\n\nconst errorCreateTalk = (message) => dispatch => {\n  dispatch({\n    type: ERROR_CREATE_TALK,\n    payload: message\n  })\n}"]},"metadata":{},"sourceType":"module"}