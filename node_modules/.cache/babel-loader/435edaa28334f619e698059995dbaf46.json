{"ast":null,"code":"var _jsxFileName = \"/Users/pakchu/Desktop/CIM-All-Code/advanced-form/src/Input/InputClass.js\";\n\n/* eslint-disable no-unused-expressions */\n\n/* eslint-disable no-duplicate-case */\n\n/* eslint-disable no-fallthrough */\nimport React from 'react';\nimport { TextField, MenuItem, FormControl, InputLabel, Select, Input } from '@material-ui/core';\n\nconst InputClass = props => {\n  const input = props.input;\n  let dynamicInputField = null;\n\n  const renderSelectOptions = () => {\n    return input.gender.map(option => {\n      return React.createElement(MenuItem, {\n        key: option,\n        value: option,\n        primaryText: option,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        },\n        __self: this\n      }, option);\n    });\n  };\n\n  switch (input.type) {\n    case 'text':\n      dynamicInputField = React.createElement(TextField, {\n        id: input.id,\n        label: input.label,\n        required: input.required,\n        style: input.style,\n        name: input.name,\n        type: input.type,\n        onChange: props.handleInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      });\n      break;\n\n    case 'email':\n      dynamicInputField = React.createElement(TextField, {\n        id: input.id,\n        label: input.label,\n        required: input.required,\n        style: input.style,\n        name: input.name,\n        type: input.type,\n        onChange: props.handleInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      });\n      break;\n\n    case 'password':\n      dynamicInputField = React.createElement(TextField, {\n        id: input.id,\n        label: input.label,\n        required: input.required,\n        style: input.style,\n        name: input.name,\n        type: input.type,\n        onChange: props.handleInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      });\n      break;\n\n    case 'select':\n      dynamicInputField = React.createElement(FormControl, {\n        style: input.style,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(InputLabel, {\n        htmlFor: \"select-multiple\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, \"Choose You Gender\"), React.createElement(Select, {\n        value: input.name,\n        onChange: props.handleInputChange,\n        name: input.name,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, renderSelectOptions()));\n      break;\n\n    case 'multiline':\n      dynamicInputField = React.createElement(TextField, {\n        id: input.id,\n        label: input.label,\n        required: input.required,\n        style: input.style,\n        name: input.name,\n        type: input.name,\n        onChange: props.handleInputChange,\n        rows: input.rows,\n        multiline: input.multiline,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      });\n      break;\n\n    default:\n      return null;\n  }\n\n  return React.createElement(React.Fragment, null, dynamicInputField);\n};\n\nexport default InputClass;","map":{"version":3,"sources":["/Users/pakchu/Desktop/CIM-All-Code/advanced-form/src/Input/InputClass.js"],"names":["React","TextField","MenuItem","FormControl","InputLabel","Select","Input","InputClass","props","input","dynamicInputField","renderSelectOptions","gender","map","option","type","id","label","required","style","name","handleInputChange","rows","multiline"],"mappings":"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","sourcesContent":["/* eslint-disable no-unused-expressions */\n/* eslint-disable no-duplicate-case */\n/* eslint-disable no-fallthrough */\nimport React from 'react';\nimport {TextField, MenuItem, FormControl, InputLabel, Select, Input} from '@material-ui/core';\n\n\n\n\nconst InputClass = (props) => {\n  const { input } = props;\n\n  let dynamicInputField = null \n\n  const renderSelectOptions = () => {\n    return input.gender.map(option => {\n      return (\n        <MenuItem key={option} value={option} primaryText={option}>\n          {option}\n        </MenuItem>\n      )\n  })\n  };\n\n\n  switch (input.type) {\n\n    case('text'):\n\n      dynamicInputField = <TextField \n                                id={input.id}\n                                label={input.label}\n                                required={input.required}\n                                style={input.style}\n                                name={input.name}\n                                type={input.type}\n                                onChange={props.handleInputChange}\n                          />\n      break;\n\n    case('email'):\n        dynamicInputField = <TextField \n                              id={input.id}\n                              label={input.label}\n                              required={input.required}\n                              style={input.style}\n                              name={input.name}\n                              type={input.type}\n                              onChange={props.handleInputChange}\n                            />\n        break;                   \n      \n    case('password'):\n        dynamicInputField = <TextField \n                              id={input.id}\n                              label={input.label}\n                              required={input.required}\n                              style={input.style}\n                              name={input.name}\n                              type={input.type}\n                              onChange={props.handleInputChange}\n                            />\n        break; \n    case('select'):\n    \n        dynamicInputField = <FormControl style={input.style}>\n                              <InputLabel htmlFor=\"select-multiple\">Choose You Gender</InputLabel>\n                              <Select\n                                value={input.name}\n                                onChange={props.handleInputChange}\n                        \n                                name={input.name}\n                              >\n                              {\n                                renderSelectOptions()\n                              }\n                              </Select>\n                              </FormControl>\n\n\n      break;\n    case('multiline'):\n                 \n      dynamicInputField = <TextField \n                            id={input.id}\n                            label={input.label}\n                            required={input.required}\n                            style={input.style}\n                            name={input.name}\n                            type={input.name}\n                            onChange={props.handleInputChange}\n                            rows={input.rows}\n                            multiline={input.multiline}\n                          />\n\n      break;\n\n    default: \n      return null;\n  }\n\n\n\n  return (\n    <>\n      {dynamicInputField}\n    </>\n  )\n}\n\nexport default InputClass"]},"metadata":{},"sourceType":"module"}