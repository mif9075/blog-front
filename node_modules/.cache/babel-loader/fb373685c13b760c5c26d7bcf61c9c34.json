{"ast":null,"code":"import { AUTH_USER_SUCCESSFUL, AUTH_USER_LOGOUT, AUTH_SIGNUP_SUCCESSFUL, AUTH_USER_FAILURE } from '../actionTypes/actionTypes';\nimport setAuthToken from '../../lib/setAuthToken';\nimport Axios from '../../lib/Axios';\nexport const signup = userInfo => async dispatch => {\n  try {\n    let success = await Axios.post('/users/sign-up', userInfo);\n    dispatch(handleSignupSuccess(success.data.message));\n    return Promise.resolve(success.data.message);\n  } catch (error) {\n    return Promise.reject(error);\n  }\n};\nexport const signin = userInfo => async dispatch => {\n  try {\n    let success = await Axios.post('/users/sign-in', userInfo);\n    console.log(success);\n    dispatch(setAuthSuccessUser(success.data.token));\n    return Promise.resolve('Signin successful!');\n  } catch (error) {\n    console.log(error);\n    return Promise.reject(error);\n  }\n};\nexport const logout = () => dispatch => {\n  localStorage.removeItem('jwtToken');\n  setAuthToken(false);\n  dispatch({\n    type: AUTH_USER_LOGOUT\n  });\n};\nexport const setAuthSuccessUser = userInfo => dispatch => {\n  dispatch({\n    type: AUTH_USER_SUCCESSFUL,\n    payload: userInfo\n  });\n};\n\nconst handleSignupSuccess = message => dispatch => {\n  dispatch({\n    type: AUTH_SIGNUP_SUCCESSFUL,\n    payload: message\n  });\n};\n\nexport const handleErrorSignup = message => dispatch => {\n  dispatch({\n    type: AUTH_USER_FAILURE,\n    payload: message\n  });\n};","map":{"version":3,"sources":["/Users/pakchu/Desktop/CIM-All-Code/blog-auth-redux/src/redux/action/authUserAction.js"],"names":["AUTH_USER_SUCCESSFUL","AUTH_USER_LOGOUT","AUTH_SIGNUP_SUCCESSFUL","AUTH_USER_FAILURE","setAuthToken","Axios","signup","userInfo","dispatch","success","post","handleSignupSuccess","data","message","Promise","resolve","error","reject","signin","console","log","setAuthSuccessUser","token","logout","localStorage","removeItem","type","payload","handleErrorSignup"],"mappings":"AAAA,SAASA,oBAAT,EACSC,gBADT,EAESC,sBAFT,EAGSC,iBAHT,QAIe,4BAJf;AAKA,OAAOC,YAAP,MAAyB,wBAAzB;AACA,OAAOC,KAAP,MAAkB,iBAAlB;AAEA,OAAO,MAAMC,MAAM,GAAIC,QAAD,IAAc,MAAMC,QAAN,IAAkB;AACpD,MAAI;AACF,QAAIC,OAAO,GAAG,MAAMJ,KAAK,CAACK,IAAN,CAAW,gBAAX,EAA6BH,QAA7B,CAApB;AACAC,IAAAA,QAAQ,CAACG,mBAAmB,CAACF,OAAO,CAACG,IAAR,CAAaC,OAAd,CAApB,CAAR;AACA,WAAOC,OAAO,CAACC,OAAR,CAAgBN,OAAO,CAACG,IAAR,CAAaC,OAA7B,CAAP;AACD,GAJD,CAIE,OAAOG,KAAP,EAAc;AACd,WAAOF,OAAO,CAACG,MAAR,CAAeD,KAAf,CAAP;AACD;AACF,CARM;AAUP,OAAO,MAAME,MAAM,GAAIX,QAAD,IAAc,MAAMC,QAAN,IAAkB;AAEpD,MAAI;AACF,QAAIC,OAAO,GAAG,MAAMJ,KAAK,CAACK,IAAN,CAAW,gBAAX,EAA6BH,QAA7B,CAApB;AACAY,IAAAA,OAAO,CAACC,GAAR,CAAYX,OAAZ;AACAD,IAAAA,QAAQ,CAACa,kBAAkB,CAACZ,OAAO,CAACG,IAAR,CAAaU,KAAd,CAAnB,CAAR;AACA,WAAOR,OAAO,CAACC,OAAR,CAAgB,oBAAhB,CAAP;AACD,GALD,CAKE,OAAOC,KAAP,EAAc;AACdG,IAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAZ;AACA,WAAOF,OAAO,CAACG,MAAR,CAAeD,KAAf,CAAP;AACD;AAGF,CAbM;AAeP,OAAO,MAAMO,MAAM,GAAG,MAAMf,QAAQ,IAAI;AACrCgB,EAAAA,YAAY,CAACC,UAAb,CAAwB,UAAxB;AACArB,EAAAA,YAAY,CAAC,KAAD,CAAZ;AACAI,EAAAA,QAAQ,CAAC;AACPkB,IAAAA,IAAI,EAAEzB;AADC,GAAD,CAAR;AAGF,CANM;AAQP,OAAO,MAAMoB,kBAAkB,GAAId,QAAD,IAAcC,QAAQ,IAAI;AAC1DA,EAAAA,QAAQ,CAAC;AACPkB,IAAAA,IAAI,EAAE1B,oBADC;AAEP2B,IAAAA,OAAO,EAAEpB;AAFF,GAAD,CAAR;AAID,CALM;;AAOP,MAAMI,mBAAmB,GAAIE,OAAD,IAAaL,QAAQ,IAAI;AACnDA,EAAAA,QAAQ,CAAC;AACPkB,IAAAA,IAAI,EAAExB,sBADC;AAEPyB,IAAAA,OAAO,EAAEd;AAFF,GAAD,CAAR;AAKD,CAND;;AAQA,OAAO,MAAMe,iBAAiB,GAAIf,OAAD,IAAaL,QAAQ,IAAI;AACxDA,EAAAA,QAAQ,CAAC;AACPkB,IAAAA,IAAI,EAAEvB,iBADC;AAEPwB,IAAAA,OAAO,EAAEd;AAFF,GAAD,CAAR;AAID,CALM","sourcesContent":["import { AUTH_USER_SUCCESSFUL, \n         AUTH_USER_LOGOUT,\n         AUTH_SIGNUP_SUCCESSFUL, \n         AUTH_USER_FAILURE\n        } from '../actionTypes/actionTypes';\nimport setAuthToken from '../../lib/setAuthToken';\nimport Axios from '../../lib/Axios';\n\nexport const signup = (userInfo) => async dispatch => {\n  try {\n    let success = await Axios.post('/users/sign-up', userInfo);\n    dispatch(handleSignupSuccess(success.data.message));\n    return Promise.resolve(success.data.message)\n  } catch (error) {\n    return Promise.reject(error);\n  }\n}\n\nexport const signin = (userInfo) => async dispatch => {\n\n  try {\n    let success = await Axios.post('/users/sign-in', userInfo);\n    console.log(success)\n    dispatch(setAuthSuccessUser(success.data.token));\n    return Promise.resolve('Signin successful!');\n  } catch (error) {\n    console.log(error)\n    return Promise.reject(error);\n  }\n\n\n}\n\nexport const logout = () => dispatch => {\n   localStorage.removeItem('jwtToken');\n   setAuthToken(false);\n   dispatch({\n     type: AUTH_USER_LOGOUT\n   });\n}\n\nexport const setAuthSuccessUser = (userInfo) => dispatch => {\n  dispatch({\n    type: AUTH_USER_SUCCESSFUL,\n    payload: userInfo\n  })\n}\n\nconst handleSignupSuccess = (message) => dispatch => {\n  dispatch({\n    type: AUTH_SIGNUP_SUCCESSFUL,\n    payload: message\n  })\n\n}\n\nexport const handleErrorSignup = (message) => dispatch => {\n  dispatch({\n    type: AUTH_USER_FAILURE,\n    payload: message\n  })\n}\n\n"]},"metadata":{},"sourceType":"module"}