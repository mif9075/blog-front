{"ast":null,"code":"import { CREATE_TALK, ERROR_CREATE_TALK } from '../actionTypes/actionTypes';\nimport Axios from '../../lib/Axios';\nexport const createTalk = talkInfo => async dispatch => {\n  let talkObj = {\n    id: talkInfo.id,\n    title: talkInfo.title,\n    talk: talkInfo.talk,\n    image: talkInfo.image\n  };\n\n  try {\n    let success = await Axios.post('/talk/create-talk', talkObj);\n    console.log(success);\n    dispatch(successCreateTalk(success));\n    Promise.resolve(success);\n  } catch (error) {\n    console.log(error);\n    dispatch(errorCreateTalk(error));\n    Promise.reject(error);\n  }\n};\n\nconst successCreateTalk = createdTalk => dispatch => {\n  dispatch({\n    type: CREATE_TALK,\n    payload: createdTalk\n  });\n};\n\nconst errorCreateTalk = message => dispatch => {\n  dispatch({\n    type: ERROR_CREATE_TALK,\n    payload: message\n  });\n};","map":{"version":3,"sources":["/Users/pakchu/Desktop/CIM-All-Code/blog-auth-redux/src/redux/action/talkAction.js"],"names":["CREATE_TALK","ERROR_CREATE_TALK","Axios","createTalk","talkInfo","dispatch","talkObj","id","title","talk","image","success","post","console","log","successCreateTalk","Promise","resolve","error","errorCreateTalk","reject","createdTalk","type","payload","message"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,iBAAtB,QAA+C,4BAA/C;AACA,OAAOC,KAAP,MAAkB,iBAAlB;AAEA,OAAO,MAAMC,UAAU,GAAIC,QAAD,IAAc,MAAMC,QAAN,IAAkB;AAExD,MAAIC,OAAO,GAAG;AACZC,IAAAA,EAAE,EAAEH,QAAQ,CAACG,EADD;AAEZC,IAAAA,KAAK,EAAEJ,QAAQ,CAACI,KAFJ;AAGZC,IAAAA,IAAI,EAAEL,QAAQ,CAACK,IAHH;AAIZC,IAAAA,KAAK,EAAEN,QAAQ,CAACM;AAJJ,GAAd;;AAOA,MAAI;AAEF,QAAIC,OAAO,GAAG,MAAMT,KAAK,CAACU,IAAN,CAAW,mBAAX,EAAgCN,OAAhC,CAApB;AACAO,IAAAA,OAAO,CAACC,GAAR,CAAYH,OAAZ;AACAN,IAAAA,QAAQ,CAACU,iBAAiB,CAACJ,OAAD,CAAlB,CAAR;AAEAK,IAAAA,OAAO,CAACC,OAAR,CAAgBN,OAAhB;AAED,GARD,CAQE,OAAOO,KAAP,EAAc;AACdL,IAAAA,OAAO,CAACC,GAAR,CAAYI,KAAZ;AACAb,IAAAA,QAAQ,CAACc,eAAe,CAACD,KAAD,CAAhB,CAAR;AACAF,IAAAA,OAAO,CAACI,MAAR,CAAeF,KAAf;AACD;AAEF,CAvBM;;AAyBP,MAAMH,iBAAiB,GAAIM,WAAD,IAAiBhB,QAAQ,IAAI;AACrDA,EAAAA,QAAQ,CAAC;AACPiB,IAAAA,IAAI,EAAEtB,WADC;AAEPuB,IAAAA,OAAO,EAAEF;AAFF,GAAD,CAAR;AAID,CALD;;AAOA,MAAMF,eAAe,GAAIK,OAAD,IAAanB,QAAQ,IAAI;AAC/CA,EAAAA,QAAQ,CAAC;AACPiB,IAAAA,IAAI,EAAErB,iBADC;AAEPsB,IAAAA,OAAO,EAAEC;AAFF,GAAD,CAAR;AAID,CALD","sourcesContent":["import { CREATE_TALK, ERROR_CREATE_TALK } from '../actionTypes/actionTypes';\nimport Axios from '../../lib/Axios';\n\nexport const createTalk = (talkInfo) => async dispatch => {\n\n  let talkObj = {\n    id: talkInfo.id,\n    title: talkInfo.title, \n    talk: talkInfo.talk, \n    image: talkInfo.image\n  }\n\n  try {\n\n    let success = await Axios.post('/talk/create-talk', talkObj)\n    console.log(success)\n    dispatch(successCreateTalk(success));\n\n    Promise.resolve(success);\n\n  } catch (error) {\n    console.log(error)\n    dispatch(errorCreateTalk(error))\n    Promise.reject(error);\n  }\n\n}\n\nconst successCreateTalk = (createdTalk) => dispatch => {\n  dispatch({\n    type: CREATE_TALK,\n    payload: createdTalk\n  })\n}\n\nconst errorCreateTalk = (message) => dispatch => {\n  dispatch({\n    type: ERROR_CREATE_TALK,\n    payload: message\n  })\n}"]},"metadata":{},"sourceType":"module"}